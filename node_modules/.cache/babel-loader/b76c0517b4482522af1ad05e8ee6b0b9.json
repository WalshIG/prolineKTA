{"ast":null,"code":"var _jsxFileName = \"/Users/jessejohnston/Desktop/JagSite/revents/src/features/auth/Register/RegisterForm.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Segment, Button, Label, Divider } from 'semantic-ui-react';\nimport { Field, reduxForm } from 'redux-form';\nimport { combineValidators, isRequired } from 'revalidate';\nimport TextInput from '../../../app/common/form/TextInput';\nimport { registerUser } from '../authActions';\nimport SocialLogin from '../SocialLogin/SocialLogin';\nvar actions = {\n  registerUser: registerUser\n};\nvar validate = combineValidators({\n  displayName: isRequired('displayName'),\n  email: isRequired('email'),\n  password: isRequired('password')\n});\n\nvar RegisterForm = function RegisterForm(_ref) {\n  var registerUser = _ref.registerUser,\n      handleSubmit = _ref.handleSubmit,\n      error = _ref.error,\n      invalid = _ref.invalid,\n      submitting = _ref.submitting;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form, {\n    size: \"large\",\n    onSubmit: handleSubmit(registerUser),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"displayName\",\n    type: \"text\",\n    component: TextInput,\n    placeholder: \"Known As\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    component: TextInput,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    component: TextInput,\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), error && React.createElement(Label, {\n    basic: true,\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, error), React.createElement(Button, {\n    disabled: invalid || submitting,\n    fluid: true,\n    size: \"large\",\n    color: \"teal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Or\"), React.createElement(SocialLogin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n};\n\nexport default connect(null, actions)(reduxForm({\n  form: 'registerForm',\n  validate: validate\n})(RegisterForm));","map":{"version":3,"sources":["/Users/jessejohnston/Desktop/JagSite/revents/src/features/auth/Register/RegisterForm.jsx"],"names":["React","connect","Form","Segment","Button","Label","Divider","Field","reduxForm","combineValidators","isRequired","TextInput","registerUser","SocialLogin","actions","validate","displayName","email","password","RegisterForm","handleSubmit","error","invalid","submitting","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,OAAvC,QAAsD,mBAAtD;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,YAA9C;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,IAAMC,OAAO,GAAG;AACdF,EAAAA,YAAY,EAAZA;AADc,CAAhB;AAIA,IAAMG,QAAQ,GAAGN,iBAAiB,CAAC;AACjCO,EAAAA,WAAW,EAAEN,UAAU,CAAC,aAAD,CADU;AAEjCO,EAAAA,KAAK,EAAEP,UAAU,CAAC,OAAD,CAFgB;AAGjCQ,EAAAA,QAAQ,EAAER,UAAU,CAAC,UAAD;AAHa,CAAD,CAAlC;;AAMA,IAAMS,YAAY,GAAG,SAAfA,YAAe,OAA8D;AAAA,MAA5DP,YAA4D,QAA5DA,YAA4D;AAAA,MAA9CQ,YAA8C,QAA9CA,YAA8C;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACjF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,QAAQ,EAAEH,YAAY,CAACR,YAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAED,SAHb;AAIE,IAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAEA,SAHb;AAIE,IAAA,WAAW,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,SAAS,EAAEA,SAHb;AAIE,IAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBGU,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,KAAK,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,KAA1B,CAnBZ,EAoBE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEC,OAAO,IAAIC,UAA7B;AAAyC,IAAA,KAAK,MAA9C;AAA+C,IAAA,IAAI,EAAC,OAApD;AAA4D,IAAA,KAAK,EAAC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,EAuBE,oBAAC,OAAD;AAAS,IAAA,UAAU,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAvBF,EAwBA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBA,CADF,CADF,CADF;AAgCD,CAjCD;;AAmCA,eAAetB,OAAO,CAAC,IAAD,EAAOa,OAAP,CAAP,CAAuBN,SAAS,CAAC;AAACgB,EAAAA,IAAI,EAAE,cAAP;AAAuBT,EAAAA,QAAQ,EAARA;AAAvB,CAAD,CAAT,CAA4CI,YAA5C,CAAvB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Form, Segment, Button, Label, Divider } from 'semantic-ui-react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { combineValidators, isRequired } from 'revalidate'\r\nimport TextInput from '../../../app/common/form/TextInput';\r\nimport { registerUser } from '../authActions'\r\nimport SocialLogin from '../SocialLogin/SocialLogin'\r\n\r\nconst actions = {\r\n  registerUser\r\n}\r\n\r\nconst validate = combineValidators({\r\n  displayName: isRequired('displayName'),\r\n  email: isRequired('email'),\r\n  password: isRequired('password')\r\n})\r\n\r\nconst RegisterForm = ({registerUser, handleSubmit, error, invalid, submitting}) => {\r\n  return (\r\n    <div>\r\n      <Form size=\"large\" onSubmit={handleSubmit(registerUser)}>\r\n        <Segment>\r\n          <Field\r\n            name=\"displayName\"\r\n            type=\"text\"\r\n            component={TextInput}\r\n            placeholder=\"Known As\"\r\n          />\r\n          <Field\r\n            name=\"email\"\r\n            type=\"text\"\r\n            component={TextInput}\r\n            placeholder=\"Email\"\r\n          />\r\n          <Field\r\n            name=\"password\"\r\n            type=\"password\"\r\n            component={TextInput}\r\n            placeholder=\"Password\"\r\n          />\r\n          {error && <Label basic color='red'>{error}</Label>}\r\n          <Button disabled={invalid || submitting} fluid size=\"large\" color=\"teal\">\r\n            Register\r\n          </Button>\r\n          <Divider horizontal>Or</Divider>\r\n        <SocialLogin/>\r\n        </Segment>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, actions)(reduxForm({form: 'registerForm', validate})(RegisterForm));"]},"metadata":{},"sourceType":"module"}