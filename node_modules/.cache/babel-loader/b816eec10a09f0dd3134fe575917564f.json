{"ast":null,"code":"import _defineProperty from \"/Users/jessejohnston/Desktop/JagSite/revents/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jessejohnston/Desktop/JagSite/revents/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _createReducer;\n\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER, COUNTER_ACTION_FINISHED, COUNTER_ACTION_STARTED } from './testConstants';\nimport { createReducer } from '../../app/common/util/reducerUtil';\nvar initialState = {\n  data: 43,\n  loading: false\n};\nexport var incrementCounter = function incrementCounter(state, payload) {\n  return _objectSpread({}, state, {\n    data: state.data + 1\n  });\n};\nexport var decrementCounter = function decrementCounter(state, payload) {\n  return _objectSpread({}, state, {\n    data: state.data - 1\n  });\n};\nexport var counterActionStarted = function counterActionStarted(state, payload) {\n  return _objectSpread({}, state, {\n    loading: true\n  });\n};\nexport var counterActionFinished = function counterActionFinished(state, payload) {\n  return _objectSpread({}, state, {\n    loading: false\n  });\n}; // const testReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case INCREMENT_COUNTER:\n//       return { ...state, data: state.data + 1 };\n//     case DECREMENT_COUNTER:\n//       return { ...state, data: state.data - 1 };\n//     default:\n//       return state;\n//   }\n// };\n\nexport default createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, INCREMENT_COUNTER, incrementCounter), _defineProperty(_createReducer, DECREMENT_COUNTER, decrementCounter), _defineProperty(_createReducer, COUNTER_ACTION_STARTED, counterActionStarted), _defineProperty(_createReducer, COUNTER_ACTION_FINISHED, counterActionFinished), _createReducer));","map":{"version":3,"sources":["/Users/jessejohnston/Desktop/JagSite/revents/src/features/testarea/testReducer.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","COUNTER_ACTION_FINISHED","COUNTER_ACTION_STARTED","createReducer","initialState","data","loading","incrementCounter","state","payload","decrementCounter","counterActionStarted","counterActionFinished"],"mappings":";;;;;AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,EAA+CC,uBAA/C,EAAwEC,sBAAxE,QAAsG,iBAAtG;AACA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AAClD,2BAAYD,KAAZ;AAAmBH,IAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,GAAa;AAAtC;AACD,CAFM;AAIP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,KAAD,EAAQC,OAAR,EAAoB;AAClD,2BAAYD,KAAZ;AAAmBH,IAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,GAAa;AAAtC;AACD,CAFM;AAIP,OAAO,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACH,KAAD,EAAQC,OAAR,EAAoB;AACtD,2BAAWD,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B;AACD,CAFM;AAIP,OAAO,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACJ,KAAD,EAAQC,OAAR,EAAoB;AACvD,2BAAWD,KAAX;AAAkBF,IAAAA,OAAO,EAAE;AAA3B;AACD,CAFM,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeH,aAAa,CAACC,YAAD,wDACzBL,iBADyB,EACLQ,gBADK,mCAEzBP,iBAFyB,EAELU,gBAFK,mCAGzBR,sBAHyB,EAGAS,oBAHA,mCAIzBV,uBAJyB,EAICW,qBAJD,mBAA5B","sourcesContent":["import { INCREMENT_COUNTER, DECREMENT_COUNTER, COUNTER_ACTION_FINISHED, COUNTER_ACTION_STARTED } from './testConstants';\r\nimport { createReducer } from '../../app/common/util/reducerUtil'\r\n\r\nconst initialState = {\r\n  data: 43,\r\n  loading: false\r\n};\r\n\r\nexport const incrementCounter = (state, payload) => {\r\n  return { ...state, data: state.data + 1 };\r\n}\r\n\r\nexport const decrementCounter = (state, payload) => {\r\n  return { ...state, data: state.data - 1 };\r\n}\r\n\r\nexport const counterActionStarted = (state, payload) => {\r\n  return {...state, loading: true}\r\n}\r\n\r\nexport const counterActionFinished = (state, payload) => {\r\n  return {...state, loading: false}\r\n}\r\n\r\n// const testReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case INCREMENT_COUNTER:\r\n//       return { ...state, data: state.data + 1 };\r\n//     case DECREMENT_COUNTER:\r\n//       return { ...state, data: state.data - 1 };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default createReducer(initialState, {\r\n  [INCREMENT_COUNTER]: incrementCounter,\r\n  [DECREMENT_COUNTER]: decrementCounter,\r\n  [COUNTER_ACTION_STARTED]: counterActionStarted,\r\n  [COUNTER_ACTION_FINISHED]: counterActionFinished\r\n});\r\n"]},"metadata":{},"sourceType":"module"}