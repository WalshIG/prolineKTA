{"ast":null,"code":"import _classCallCheck from \"/Users/jessejohnston/Desktop/JagSite/revents/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jessejohnston/Desktop/JagSite/revents/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jessejohnston/Desktop/JagSite/revents/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jessejohnston/Desktop/JagSite/revents/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jessejohnston/Desktop/JagSite/revents/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jessejohnston/Desktop/JagSite/revents/src/features/testarea/TestComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux'; // import Script from 'react-load-script';\n// import GoogleMapReact from 'google-map-react';\n\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { incrementAsync, decrementAsync } from './testActions';\nimport { openModal } from '../modals/modalActions';\n\nvar mapState = function mapState(state) {\n  return {\n    data: state.test.data,\n    loading: state.test.loading\n  };\n};\n\nvar actions = {\n  incrementAsync: incrementAsync,\n  decrementAsync: decrementAsync,\n  openModal: openModal\n}; // const Marker = () => <Icon name='marker' size='big' color='red'/>\n\nvar TestComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestComponent, _Component);\n\n  function TestComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TestComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TestComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      address: '',\n      scriptLoaded: false\n    };\n\n    _this.handleScriptLoad = function () {\n      _this.setState({\n        scriptLoaded: true\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      geocodeByAddress(_this.state.address).then(function (results) {\n        return getLatLng(results[0]);\n      }).then(function (latLng) {\n        return console.log('Success', latLng);\n      }).catch(function (error) {\n        return console.error('Error', error);\n      });\n    };\n\n    _this.onChange = function (address) {\n      return _this.setState({\n        address: address\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TestComponent, [{\n    key: \"render\",\n    value: function render() {\n      var inputProps = {\n        value: this.state.address,\n        onChange: this.onChange\n      };\n      var _this$props = this.props,\n          incrementAsync = _this$props.incrementAsync,\n          decrementAsync = _this$props.decrementAsync,\n          data = _this$props.data,\n          openModal = _this$props.openModal,\n          loading = _this$props.loading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Test Area\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"The answer is: \", data), React.createElement(Button, {\n        loading: loading,\n        onClick: incrementAsync,\n        color: \"green\",\n        content: \"Increment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Button, {\n        loading: loading,\n        onClick: decrementAsync,\n        color: \"red\",\n        content: \"Decrement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return openModal('TestModal', {\n            data: 42\n          });\n        },\n        color: \"teal\",\n        content: \"Open Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.scriptLoaded && React.createElement(PlacesAutocomplete, {\n        inputProps: inputProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return TestComponent;\n}(Component);\n\nTestComponent.defaultProps = {\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11\n};\nexport default connect(mapState, actions)(TestComponent);","map":{"version":3,"sources":["/Users/jessejohnston/Desktop/JagSite/revents/src/features/testarea/TestComponent.jsx"],"names":["React","Component","Button","connect","PlacesAutocomplete","geocodeByAddress","getLatLng","incrementAsync","decrementAsync","openModal","mapState","state","data","test","loading","actions","TestComponent","address","scriptLoaded","handleScriptLoad","setState","handleFormSubmit","event","preventDefault","then","results","latLng","console","log","catch","error","onChange","inputProps","value","props","defaultProps","center","lat","lng","zoom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n// import Script from 'react-load-script';\r\n// import GoogleMapReact from 'google-map-react';\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from 'react-places-autocomplete';\r\nimport { incrementAsync, decrementAsync } from './testActions';\r\nimport { openModal } from '../modals/modalActions'\r\n\r\nconst mapState = state => ({\r\n  data: state.test.data,\r\n  loading: state.test.loading\r\n});\r\n\r\nconst actions = {\r\n  incrementAsync,\r\n  decrementAsync,\r\n  openModal\r\n};\r\n\r\n// const Marker = () => <Icon name='marker' size='big' color='red'/>\r\n\r\nclass TestComponent extends Component {\r\n\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 59.95,\r\n      lng: 30.33\r\n    },\r\n    zoom: 11\r\n  };\r\n\r\n  state = {\r\n    address: '',\r\n    scriptLoaded: false\r\n  };\r\n\r\n  handleScriptLoad = () => {\r\n    this.setState({ scriptLoaded: true });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    geocodeByAddress(this.state.address)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => console.log('Success', latLng))\r\n      .catch(error => console.error('Error', error));\r\n  };\r\n\r\n  onChange = address => this.setState({ address });\r\n\r\n  render() {\r\n    const inputProps = {\r\n      value: this.state.address,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    const { incrementAsync, decrementAsync, data, openModal, loading } = this.props;\r\n    return (\r\n      <div>\r\n        <h1>Test Area</h1>\r\n        <h3>The answer is: {data}</h3>\r\n        <Button loading={loading} onClick={incrementAsync} color=\"green\" content=\"Increment\" />\r\n        <Button loading={loading} onClick={decrementAsync} color=\"red\" content=\"Decrement\" />\r\n        <Button onClick={() => openModal('TestModal', {data: 42})} color=\"teal\" content=\"Open Modal\" />\r\n        <br />\r\n        <br />\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          {this.state.scriptLoaded && (\r\n            <PlacesAutocomplete inputProps={inputProps} />\r\n          )}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapState, actions)(TestComponent);\r\n"]},"metadata":{},"sourceType":"module"}