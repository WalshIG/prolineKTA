{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jessejohnston/Desktop/JagSite/revents/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jessejohnston/Desktop/JagSite/revents/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { toastr } from 'react-redux-toastr';\nimport { CREATE_EVENT, DELETE_EVENT, UPDATE_EVENT, FETCH_EVENTS } from './eventConstants';\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from '../async/asyncActions';\nimport { fetchSampleData } from '../../app/data/mockAPI';\nexport var fetchEvents = function fetchEvents(events) {\n  return {\n    type: FETCH_EVENTS,\n    payload: events\n  };\n};\nexport var createEvent = function createEvent(event) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  dispatch({\n                    type: CREATE_EVENT,\n                    payload: {\n                      event: event\n                    }\n                  });\n                  toastr.success('Success', 'Event has been created');\n                } catch (error) {\n                  toastr.error('Oops', 'Something went wrong');\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updateEvent = function updateEvent(event) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                try {\n                  dispatch({\n                    type: UPDATE_EVENT,\n                    payload: {\n                      event: event\n                    }\n                  });\n                  toastr.success('Success', 'Event has been updated');\n                } catch (error) {\n                  toastr.error('Oops', 'Something went wrong');\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteEvent = function deleteEvent(eventId) {\n  return {\n    type: DELETE_EVENT,\n    payload: {\n      eventId: eventId\n    }\n  };\n};\nexport var loadEvents = function loadEvents() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var events;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                dispatch(asyncActionStart());\n                _context3.next = 4;\n                return fetchSampleData();\n\n              case 4:\n                events = _context3.sent;\n                dispatch(fetchEvents(events));\n                dispatch(asyncActionFinish());\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n                dispatch(asyncActionError());\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 9]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/jessejohnston/Desktop/JagSite/revents/src/features/event/eventActions.jsx"],"names":["toastr","CREATE_EVENT","DELETE_EVENT","UPDATE_EVENT","FETCH_EVENTS","asyncActionStart","asyncActionFinish","asyncActionError","fetchSampleData","fetchEvents","events","type","payload","createEvent","event","dispatch","success","error","updateEvent","deleteEvent","eventId","loadEvents","console","log"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,oBAAvB;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF,QAKO,kBALP;AAMA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,gBAHF,QAIO,uBAJP;AAKA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM,EAAI;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEP,YADD;AAELQ,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAClC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACL,oBAAI;AACFA,kBAAAA,QAAQ,CAAC;AACPJ,oBAAAA,IAAI,EAAEV,YADC;AAEPW,oBAAAA,OAAO,EAAE;AACPE,sBAAAA,KAAK,EAALA;AADO;AAFF,mBAAD,CAAR;AAMAd,kBAAAA,MAAM,CAACgB,OAAP,CAAe,SAAf,EAA0B,wBAA1B;AACD,iBARD,CAQE,OAAOC,KAAP,EAAc;AACdjB,kBAAAA,MAAM,CAACiB,KAAP,CAAa,MAAb,EAAqB,sBAArB;AACD;;AAXI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAaD,CAdM;AAgBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAJ,KAAK,EAAI;AAClC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACL,oBAAI;AACFA,kBAAAA,QAAQ,CAAC;AACPJ,oBAAAA,IAAI,EAAER,YADC;AAEPS,oBAAAA,OAAO,EAAE;AACPE,sBAAAA,KAAK,EAALA;AADO;AAFF,mBAAD,CAAR;AAMAd,kBAAAA,MAAM,CAACgB,OAAP,CAAe,SAAf,EAA0B,wBAA1B;AACD,iBARD,CAQE,OAAOC,KAAP,EAAc;AACdjB,kBAAAA,MAAM,CAACiB,KAAP,CAAa,MAAb,EAAqB,sBAArB;AACD;;AAXI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAaD,CAdM;AAgBP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,OAAO,EAAI;AACpC,SAAO;AACLT,IAAAA,IAAI,EAAET,YADD;AAELU,IAAAA,OAAO,EAAE;AACPQ,MAAAA,OAAO,EAAPA;AADO;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAMN,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,gBAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AAFG;AAAA,uBAGgBG,eAAe,EAH/B;;AAAA;AAGCE,gBAAAA,MAHD;AAIHK,gBAAAA,QAAQ,CAACN,WAAW,CAACC,MAAD,CAAZ,CAAR;AACAK,gBAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AALG;AAAA;;AAAA;AAAA;AAAA;AAOHgB,gBAAAA,OAAO,CAACC,GAAR;AACAR,gBAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWD,CAZM","sourcesContent":["import { toastr } from 'react-redux-toastr'\r\nimport {\r\n  CREATE_EVENT,\r\n  DELETE_EVENT,\r\n  UPDATE_EVENT,\r\n  FETCH_EVENTS\r\n} from './eventConstants';\r\nimport {\r\n  asyncActionStart,\r\n  asyncActionFinish,\r\n  asyncActionError\r\n} from '../async/asyncActions';\r\nimport { fetchSampleData } from '../../app/data/mockAPI';\r\n\r\nexport const fetchEvents = events => {\r\n  return {\r\n    type: FETCH_EVENTS,\r\n    payload: events\r\n  };\r\n};\r\n\r\nexport const createEvent = event => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: CREATE_EVENT,\r\n        payload: {\r\n          event\r\n        }\r\n      });\r\n      toastr.success('Success', 'Event has been created')\r\n    } catch (error) {\r\n      toastr.error('Oops', 'Something went wrong')\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateEvent = event => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: UPDATE_EVENT,\r\n        payload: {\r\n          event\r\n        }\r\n      });\r\n      toastr.success('Success', 'Event has been updated')\r\n    } catch (error) {\r\n      toastr.error('Oops', 'Something went wrong')\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteEvent = eventId => {\r\n  return {\r\n    type: DELETE_EVENT,\r\n    payload: {\r\n      eventId\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadEvents = () => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(asyncActionStart());\r\n      let events = await fetchSampleData();\r\n      dispatch(fetchEvents(events));\r\n      dispatch(asyncActionFinish());\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(asyncActionError());\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}