{"version":3,"sources":["app/fetch/fetches.js","features/record/RecordList.jsx","features/record/ui.js","features/record/RecordDashboard.jsx","features/report/ReportList.jsx","features/report/ui.js","features/report/ReportDashboard.jsx","features/nav/NavBar/NavBar.jsx","features/home/HomePage.jsx","features/property/AddProperty.jsx","features/user/EditContractor.jsx","features/user/AddContractor.jsx","features/key/PrintQRCode.jsx","features/key/AutoComplete.jsx","features/key/ui.js","features/key/AddKey.jsx","features/testing/Testing.js","features/key/KeyPending.jsx","features/key/CheckKeyOut.jsx","features/key/CheckKeyIn.jsx","features/slips/CohoSlip.jsx","features/slips/ElevatorSlip.jsx","features/slips/FobSlip.jsx","features/slips/GuestSlip.jsx","features/slips/PurchaseSlip.jsx","features/slips/RentalSlip.jsx","features/slips/TradeSlip.jsx","features/key/ScanKey.jsx","features/key/EditKey.jsx","features/property/EditProperty.jsx","features/slips/GenericSlip.jsx","app/layout/App.jsx","registerServiceWorker.js","index.js"],"names":["handleHTTPErrors","response","ok","Error","statusText","_callee","request","handleData","result","regenerator_default","a","wrap","_context","prev","next","fetch","concat","process","method","headers","Content-Type","body","JSON","stringify","sent","json","console","log","abrupt","t0","window","alert","message","stop","fetchRecordData","_x3","_x4","_x5","_x6","_x7","_x8","_x9","_fetchRecordData","apply","this","arguments","_callee2","endpoint","queryType","page","pageSize","sorted","filter","requestBody","records","_context2","fetchRecord","_x10","_x11","_x12","_x13","_fetchRecord","_callee3","_context3","fetchKeyStatus","_x14","_x15","_x16","_fetchKeyStatus","_callee4","record","_context4","fetchKeyCheck","_x17","_x18","_x19","_fetchKeyCheck","_callee5","_context5","_callee6","_context6","RecordList","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","data","pages","loading","prevProps","prevState","_this2","type","setState","res","_this3","react_default","createElement","es","className","columns","minRows","defaultPageSize","showPagination","showPaginationTop","showPaginationBottom","pageSizeOptions","manual","onPageChange","pageIndex","onPageSizeChange","onFetchData","instance","Component","keyColumns","Header","accessor","minWidth","style","textAlign","Cell","row","Button","as","NavLink","to","pathname","keyRecord","original","sortable","peopleColumns","value","phone","replace","propertyColumns","peopleFilter","key","text","propFilter","keyFilter","RecordDashboard","handleValue","e","_ref","filterValue","handleId","_ref2","filterId","tableType","bind","assertThisInitialized","options","id","ui","Dropdown","selection","onChange","placeholder","Input","paddingLeft","icon","iconPosition","Divider","record_RecordList","nextProps","ReportList","startDate","Date","endDate","handleChangeStart","handleChangeEnd","date","filtered","propertyFilter","ReportDashboard","generateFullReport","preventDefault","open","filePath","floated","onClick","color","report_ReportList","NavBar","Menu","inverted","fluid","fixed","Container","Item","Link","header","src","alt","item","name","content","handleLogout","withRouter","HomePage","Modal","trigger","basic","Content","Grid","centered","Column","Segment","Form","size","onSubmit","login","AddProperty","address","city","postalCode","propertyName","propertyNumber","propertyType","comments","redirect","handleChange","handleSubmit","defineProperty","react_router","marginTop","padding","display","paddingTop","width","Field","required","pattern","TextArea","minHeight","EditContractor","firstName","location","first_name","lastName","last_name","phoneNum","phone_num","email","company","contractorId","contractor_id","validators","errorMessages","AddContractor","GeneratedQRCode","qrcode_react_lib_default","qrCode","level","renderAs","fontSize","fontWeight","transform","transformOrigin","marginLeft","propNumber","keyType","charAt","keyNumber","keyQuantity","React","PrintQRCode","keyOfficeLocation","qrRef","useRef","_useState","useState","_useState2","slicedToArray","setRedirect","justifyContent","PrintQRCode_GeneratedQRCode","ref","lib_default","current","pageStyle","left","onAfterPrint","AutoComplete","handleResultSelect","title","selected","isLoading","results","handleSearchChange","_x20","_x21","_fetchNames","fetchNames","tableName","table","_this$state","Search","assign","onResultSelect","onSearchChange","showNoResults","keyOfficeLocationOptions","keyStatusOptions","keyTypeOptions","AddKey","keyStorageLocation","deposit","showQR","handleSelected","property_number","key_number","key_PrintQRCode","key_AutoComplete","min","initialCreateState","fname","lname","username","createEmail","createPassword","fnameCreateError","lnameCreateError","usernameCreateError","emailreateError","passwordCreateError","phoneCreateError","addressCreateError","initialState","password","nameError","emailError","passwordError","TestingForm","createState","handleCreateChange","event","isCreateCheckbox","target","checked","createValidate","emailCreateError","includes","handleCreateSubmit","isCheckbox","validate","class","createFirstName","createLastName","createUsername","createPhone","createAddress","KeyPending","divided","Row","stretched","Table","definition","Body","isPending","CheckKeyOut","containerStyle","checkout","height","Group","Checkbox","label","inline","CheckKeyIn","transaction","checkedOut","dueDate","fees","depositType","notes","compact","checkin","CohoSlip","moment","format","add","defaultValue","defaultvalue","autofill","labelPosition","Label","radio","defaultChecked","horizontal","disabled","PrintCohoSlip","slipRef","CohoSlip_CohoSlip","ElevatorSlip","firstname","PrintElevatorSlip","ElevatorSlip_ElevatorSlip","FobSlip","PrintFobSlip","FobSlip_FobSlip","GuestSlip","PrintGuestSlip","GuestSlip_GuestSlip","PrintPurchaseSlip","PurchaseSlip_FobSlip","checkbox","PrintRentalSlip","RentalSlip_ElevatorSlip","TradeSlip","defaultValu","PrintTradeSlip","TradeSlip_TradeSlip","ScanKey","disableForm","renderTransactionSlip","renderDepositSlip","renderNewContractor","scannedKey","keyPending","keyCheckedIn","keyTransaction","searchResults","handleInput","handleKeyScan","handlePending","handleCheckout","handleCheckin","keyStatus","trans","keyId","sale","exit","transRequest","_this4","contractor","keySold","rentalExit","transId","_this5","newContractor","pointing","autoFocus","key_KeyPending","key_CheckKeyOut","PurchaseSlip","RentalSlip","key_CheckKeyIn","slips_FobSlip","slips_TradeSlip","slips_ElevatorSlip","guest","slips_CohoSlip","slips_GuestSlip","EditKey","key_id","storage_location","office_location","key_quantity","key_status","key_type","active","EditProperty","postal_code","property_name","property_type","propertyId","property_id","addressId","address_id","GenericSlip","PrintGenericSlip","GenericSlip_GenericSlip","App","KeyRecordDashBoard","record_RecordDashboard","privLevel","PropertyRecordDashBoard","PeopleRecordDashboard","KeyReportDashboard","report_ReportDashboard","BuildingReportDashboard","HomePageLogin","home_HomePage","handleLogin","authorized","hydrateStateWithStorage","localStorage","hasOwnProperty","getItem","parse","err","render","rest","objectWithoutProperties","_x","_x2","_fetchLogin","fetchLogin","setItem","priv_level","clear","href","exact","path","PrivateRoute","nav_NavBar_NavBar","component","Testing","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","rootEl","document","getElementById","ReactDOM","react_router_dom","layout_App","URL","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6e4db076.chunk.js","sourcesContent":["//All-purpose function for handling HTTP status codes for the fetch API\nfunction handleHTTPErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n//Fetch call to log in\nexport async function fetchLogin(request, handleData) {\n  try {\n    let result = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(request)\n    });\n    result = await handleHTTPErrors(result);\n    const response = await result.json();\n    console.log(\"API response OK.\");\n    return handleData(response);\n  } catch(err) {\n    console.log(\"Login failed: \" + JSON.stringify(err));\n    window.alert(\"Login failure: \" + JSON.stringify(err.message));\n    return err;\n  }\n}\n\n//Fetch call to get data for React-Table\nexport async function fetchRecordData(\n  endpoint,\n  queryType,\n  page,\n  pageSize,\n  sorted,\n  filter,\n  handleData\n) {\n  let requestBody = {\n    queryType: queryType,\n    page: page,\n    pageSize: pageSize,\n    sorted: sorted,\n    filter: filter\n  };\n  try {\n    let result = await fetch(`${process.env.REACT_APP_API_URL}/${endpoint}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(requestBody)\n    });\n    result = await handleHTTPErrors(result);\n    const records = await result.json();\n    console.log(\"API response OK.\");\n    return handleData(records);\n  } catch (err) {\n    console.log(\"fetchData failed: \" + JSON.stringify(err));\n    window.alert(\"Failure: \" + JSON.stringify(err.message));\n    return;\n  }\n}\n\n//Fetch for adding/editing individual key/property records\nexport async function fetchRecord(request, method, endpoint, handleData) {\n  try {\n    let result = await fetch(`${process.env.REACT_APP_API_URL}/${endpoint}`, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(request)\n    });\n    result = await handleHTTPErrors(result);\n    const records = await result.json();\n    return handleData(records);\n  } catch (err) {\n    console.log(\"fetch failed: \" + JSON.stringify(err));\n    window.alert(\"Failure: \" + JSON.stringify(err.message));\n    return;\n  }\n}\n\n//Fetch for getting individual key/transaction records\nexport async function fetchKeyStatus(request, method, handleData) {\n  try {\n    let result = await fetch(`${process.env.REACT_APP_API_URL}/keystatus`, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(request)\n    });\n    result = await handleHTTPErrors(result);\n    const record = await result.json();\n    console.log(\"API response: \" + JSON.stringify(record));\n    return handleData(record);\n  } catch (err) {\n    window.alert(err);\n    console.log(\"fetchKeyStatus failed: \" + JSON.stringify(err));\n    window.alert(\"Failure: \" + JSON.stringify(err.message));\n    return;\n  }\n}\n\n//Fetch for changing key status and creating transactions\nexport async function fetchKeyCheck(request, method, handleData) {\n  try {\n    let result = await fetch(`${process.env.REACT_APP_API_URL}/keycheck`, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(request)\n    });\n    result = await handleHTTPErrors(result);\n    const record = await result.json();\n    console.log(\"API response: \" + JSON.stringify(record));\n    return handleData(record);\n  } catch (err) {\n    console.log(\"fetchKeyCheck failed: \" + JSON.stringify(err.message));\n    window.alert(\"Failure: \" + JSON.stringify(err.message));\n    return;\n  }\n}\n\n//Fetch for result sets for the autocomplete search bars\nexport async function fetchNames(request, handleData) {\n  try {\n    let result = await fetch(`${process.env.REACT_APP_API_URL}/search`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(request)\n    });\n    result = await handleHTTPErrors(result);\n    const records = await result.json();\n    return handleData(records);\n  } catch (err) {\n    console.log(\"fetch failed: \" + JSON.stringify(err));\n    window.alert(\"Failure: \" + JSON.stringify(err.message));\n    return;\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport { fetchRecordData } from \"../../app/fetch/fetches\";\nimport \"react-table/react-table.css\";\n\nclass RecordList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 0,\n      pages: 0,\n      pageSize: 20,\n      sorted: [],\n      loading: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.type !== prevProps.type ||\n      this.props.filter !== prevProps.filter\n    ) {\n      switch (this.props.type) {\n        case \"keys\":\n          this.setState({\n            loading: true\n          });\n          fetchRecordData(\n            \"records\",\n            this.props.type,\n            this.state.page,\n            this.state.pageSize,\n            this.state.sorted,\n            this.props.filter,\n            res => {\n              this.setState({\n                data: res.data,\n                page: 0,\n                pages: res.pages,\n                loading: false\n              });\n            }\n          );\n          break;\n        case \"properties\":\n          this.setState({\n            loading: true\n          });\n          fetchRecordData(\n            \"records\",\n            this.props.type,\n            this.state.page,\n            this.state.pageSize,\n            this.state.sorted,\n            this.props.filter,\n            res => {\n              this.setState({\n                data: res.data,\n                page: 0,\n                pages: res.pages,\n                loading: false\n              });\n            }\n          );\n          break;\n        case \"people\":\n          this.setState({\n            loading: true\n          });\n          fetchRecordData(\n            \"records\",\n            this.props.type,\n            this.state.page,\n            this.state.pageSize,\n            this.state.sorted,\n            this.props.filter,\n            res => {\n              this.setState({\n                data: res.data,\n                page: 0,\n                pages: res.pages,\n                loading: false\n              });\n            }\n          );\n          break;\n        default:\n          return;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactTable\n          className=\"-highlight\"\n          data={this.state.data}\n          page={this.state.page}\n          pages={this.state.pages}\n          columns={this.props.columns}\n          minRows={1}\n          defaultPageSize={20}\n          loading={this.state.loading}\n          showPagination={true}\n          showPaginationTop={false}\n          showPaginationBottom={true}\n          pageSizeOptions={[5, 10, 20, 25, 50, 100]}\n          manual\n          onPageChange={pageIndex => {\n            this.setState({ page: pageIndex });\n          }}\n          onPageSizeChange={(pageSize, pageIndex) => {\n            this.setState({ page: pageIndex, pageSize: pageSize });\n          }}\n          onFetchData={(state, instance) => {\n            this.setState({ loading: true });\n            fetchRecordData(\n              \"records\",\n              this.props.type,\n              state.page,\n              state.pageSize,\n              state.sorted,\n              this.props.filter,\n              res => {\n                this.setState({\n                  data: res.data,\n                  page: state.page,\n                  pages: res.pages,\n                  loading: false\n                });\n              }\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RecordList;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\n\n\n//Objects arrays describing the structure and names of table columns  \n  export const keyColumns = [{\n    Header: 'Property Type',\n    accessor: 'property_type',\n    minWidth: 120,\n    style: {textAlign: 'center'}\n    }, {\n    Header: 'Address',\n    accessor: 'address',\n    minWidth: 150,\n    }, {\n    Header: 'City/Municipality',\n    accessor: 'city',\n    minWidth: 120,\n    style: {textAlign: 'center'}\n    }, {\n    Header: 'Key Location',\n    accessor: 'storage_location',\n    style: {textAlign: 'center'}\n    }, {\n    Header: 'Office Location',\n    accessor: 'office_location',\n    minWidth: 120,\n    style: {textAlign: 'center'}\n    }, {\n    Header: 'Key Number',\n    accessor: 'key_number',\n    style: {textAlign: 'center'}\n    }, {\n    Header: 'Key Type',\n    accessor: 'key_type',\n    style: {textAlign: 'center'}\n    }, {\n    Header: 'Key Status',\n    accessor: 'key_status',\n    style: {textAlign: 'center'}\n    }, {\n      Cell: (row) => {\n        return <Button \n        as={NavLink} \n        to={{\n          pathname:\"/editkey\",\n          keyRecord: row.original\n         }}>Edit</Button>;\n      },\n      style: {textAlign: 'center'},\n      sortable: false\n    },\n  ];\n\n  export const peopleColumns = [{\n    Header: 'First Name',\n    accessor: 'first_name'\n  }, {\n    Header: 'Last Name',\n    accessor: 'last_name'\n  }, {\n    Header: 'E-mail',\n    accessor: 'email'\n  }, {\n    Header: 'Phone',\n    accessor: 'phone_num',\n    Cell: (row) => {\n      if (row.value) {\n      const phone = row.value.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n      return <span>{phone}</span>\n      } else return null;\n    },\n    style: {textAlign:'center'}\n  }, {\n    Header: 'Company',\n    accessor: 'company'\n  }, {\n    Cell: (row) => {\n      return <Button \n      as={NavLink} \n      to={{\n        pathname:\"/editcontractor\",\n        keyRecord: row.original\n       }}>Edit</Button>;\n    },\n    style: {textAlign: 'center'},\n    sortable: false\n  }];\n\n  export const propertyColumns = [{\n    Header: \"Property Name\",\n    accessor: 'property_name',\n      minWidth: 120\n  }, {\n    Header: \"Property Number\",\n    accessor: 'property_number',\n    minWidth: 70,\n    style: {textAlign: 'center'}\n  }, {\n    Header: 'Property Type',\n    accessor: 'property_type',\n    minWidth: 120,\n    style: {textAlign: 'center'}\n  }, {\n    Header: 'Address',\n    accessor: 'address',\n    minWidth: 150\n  }, {\n    Header: 'City/Municipality',\n    accessor: 'city',\n    minWidth: 120,\n    style: {textAlign: 'center'}\n    }, {\n    Header: 'Postal Code',\n    accessor: 'postal_code'\n  }, {\n    Header: 'Comments',\n    accessor: 'comments'\n  }, {\n    Cell: (row) => {\n      return <Button \n      as={NavLink} \n      to={{\n        pathname:\"/editproperty\",\n        keyRecord: row.original\n       }}>Edit</Button>;\n    },\n    style: {textAlign: 'center'},\n    sortable: false\n  }];\n\n//Arrays to describe the selections available to filter results by id\n  export const peopleFilter = [\n    { key: '1', text: '', value: ''},\n    { key: '3', text: 'First Name', value: 'first_name'},\n    { key: '4', text: 'Last Name', value: 'last_name' },\n    { key: '5', text: 'E-mail', value: 'email' },\n    { key: '6', text: 'Phone', value: 'phone_num' },\n    { key: '7', text: 'Company', value: 'company'}\n  ];\n\n  export const propFilter = [\n    { key: '1', text: '', value: ''},\n    { key: '2', text: 'Property Name', value: 'property_name'},\n    { key: '3', text: 'Property Number', value: 'property_number'},\n    { key: '4', text: 'Property Type', value: 'property_type' },\n    { key: '5', text: 'Address', value: 'address' },\n    { key: '6', text: 'City', value: 'city' },\n    { key: '7', text: 'Postal Code', value: 'postal_code'},\n    { key: '8', text: 'Comments', value: 'comments'}\n  ];\n\n  export const keyFilter = [\n    { key: '1', text: '', value: ''},\n    { key: '2', text: 'QR Code', value: 'qr'},\n    { key: '3', text: 'Property Type', value: 'property_type'},\n    { key: '4', text: 'Address', value: 'address' },\n    { key: '5', text: 'City', value: 'city' },\n    { key: '6', text: 'Location', value: 'storage_location' },\n    { key: '7', text: 'Office', value: 'office_location'},\n    { key: '8', text: 'Key Number', value: 'key_number'},\n    { key: '9', text: 'Key Type', value: 'key_type'},\n    { key: '10', text: 'Key Status', value: 'key_status'}\n  ];","import React, { Component } from 'react';\nimport { Input, Divider, Dropdown, Menu } from 'semantic-ui-react'\nimport RecordList from './RecordList';\nimport * as ui from './ui';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nclass RecordDashboard extends Component {\n\n  handleValue = (e, { value }) => this.setState({ filterValue: value});\n  handleId = (e, { value }) => this.setState({ filterId: value })\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterId: '',\n      filterValue: '',\n      tableType: this.props.tableType\n    };\n    this.handleId = this.handleId.bind(this);\n    this.handleValue = this.handleValue.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.tableType !== prevState.tableType) {\n      console.log(\"firing\");\n      return {\n        filterValue: '',\n        tableType: nextProps.tableType\n      };\n    }\n    return null;\n  }\n\n  render() {\n\n    let columns = [];\n    let options = [];\n    let filter = {\n      id: this.state.filterId,\n      value: this.state.filterValue\n    }\n    \n      switch (this.props.tableType) {\n      case \"keys\":\n        columns = ui.keyColumns;\n        options = ui.keyFilter;\n        break;\n      case \"properties\":\n        columns = ui.propertyColumns;\n        options = ui.propFilter;\n        break;\n      case \"people\":\n        columns = ui.peopleColumns;\n        options = ui.peopleFilter;\n        break;\n      default:\n        break;\n  }\n\n\n\n    return (\n      <div>\n        <div>\n          <Dropdown \n          options={options}\n          selection\n          onChange={this.handleId}\n          value={this.state.value}\n          placeholder='Category...'\n          />\n          <Input\n          style={{paddingLeft: '5px'}}\n          icon='search'\n          iconPosition='left'\n          placeholder='Search...'\n          onChange={this.handleValue}\n          value={this.state.filterValue}\n          />\n        </div>\n        <Divider/>\n        <div>\n          <RecordList type={this.props.tableType} columns={columns} filter={filter} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RecordDashboard;","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { fetchRecordData } from \"../../app/fetch/fetches\";\n\nclass ReportList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 0,\n      pages: 0,\n      pageSize: 20,\n      sorted: [],\n      loading: false,\n      startDate: new Date(),\n      endDate: new Date()\n    };\n    this.handleChangeStart = this.handleChangeStart.bind(this);\n    this.handleChangeEnd = this.handleChangeEnd.bind(this);\n  }\n\n  handleChangeStart(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  handleChangeEnd(date) {\n    this.setState({\n      endDate: date\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.type !== prevProps.type ||\n      this.props.filter !== prevProps.filter\n    ) {\n      switch (this.props.type) {\n        case \"keys\":\n          this.setState({\n            loading: true\n          });\n          fetchRecordData(\n            \"reports\",\n            this.props.type,\n            this.state.page,\n            this.state.pageSize,\n            this.state.sorted,\n            this.props.filter,\n            res => {\n              this.setState({\n                data: res.data,\n                page: 0,\n                pages: res.pages,\n                loading: false\n              });\n            }\n          );\n          break;\n        case \"properties\":\n          this.setState({\n            loading: true\n          });\n          fetchRecordData(\n            \"reports\",\n            this.props.type,\n            this.state.page,\n            this.state.pageSize,\n            this.state.sorted,\n            this.props.filter,\n            res => {\n              this.setState({\n                data: res.data,\n                page: 0,\n                pages: res.pages,\n                loading: false\n              });\n            }\n          );\n          break;\n        default:\n          return;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <container>\n          <ReactTable\n            className=\"-highlight\"\n            data={this.state.data}\n            pages={this.state.pages}\n            columns={this.props.columns}\n            minRows={1}\n            defaultPageSize={20}\n            loading={this.state.loading}\n            showPagination={true}\n            showPaginationTop={false}\n            showPaginationBottom={true}\n            pageSizeOptions={[5, 10, 20, 25, 50, 100]}\n            manual\n            onFetchData={(state, instance) => {\n              this.setState({ loading: true });\n              fetchRecordData(\n                \"reports\",\n                this.props.type,\n                state.page,\n                state.pageSize,\n                state.sorted,\n                state.filtered,\n                res => {\n                  this.setState({\n                    data: res.data,\n                    pages: res.pages,\n                    loading: false\n                  });\n                }\n              );\n            }}\n          />\n        </container>\n      </div>\n    );\n  }\n}\n\nexport default ReportList;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport { fetchBuildingNames } from \"../../app/fetch/fetches\";\n\n//Objects arrays describing the structure and names of table columns\n\nexport const keyColumns = [\n  {\n    Header: \"Property Number\",\n    accessor: \"property_number\"\n  },\n  {\n    Header: \"Property Name\",\n    accessor: \"property_name\",\n    minWidth: 200,\n    style: { textAlign: \"center\" }\n  },\n  {\n    Header: \"Key Type\",\n    accessor: \"key_type\"\n  },\n  {\n    Header: \"Key Number\",\n    accessor: \"key_number\"\n  },\n  {\n    Header: \"Office Location\",\n    accessor: \"office_location\",\n    minWidth: 120,\n    style: { textAlign: \"center\" }\n  },\n  {\n    Header: \"First Name\",\n    accessor: \"first_name\"\n  },\n  {\n    Header: \"Last Name\",\n    accessor: \"last_name\"\n  },\n  {\n    Header: \"Phone\",\n    accessor: \"phone_num\",\n    Cell: row => {\n      if (row.value) {\n        const phone = row.value.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n        return <span>{phone}</span>;\n      } else return null;\n    },\n    style: { textAlign: \"center\" }\n  },\n  {\n    Header: \"Company\",\n    accessor: \"company\"\n  },\n  {\n    Header: \"Date Out\",\n    accessor: \"checked_out\"\n  },\n  {\n    Header: \"Due Date\",\n    accessor: \"due_date\"\n  },\n  {\n    Header: \"Deposit\",\n    accessor: \"deposit\"\n  },\n  {\n    Header: \"Deposit Type\",\n    accessor: \"deposit_type\"\n  }\n];\n\nexport const propertyColumns = [\n  {\n    Header: \"Property Name\",\n    accessor: \"property_name\"\n  },\n  {\n    Header: \"Property Number\",\n    accessor: \"property_number\",\n    minWidth: 70,\n    style: {textAlign: \"center\"}\n  },\n  {\n    Header: \"Key Type\",\n    accessor: \"key_type\"\n  },\n  {\n    Header: \"Key Number\",\n    accessor: \"key_number\",\n    style: {textAlign: \"center\"},\n    minWidth: 55\n  },\n  {\n    Header: \"Office Location\",\n    accessor: \"office_location\",\n    minWidth: 120,\n    style: { textAlign: \"center\" }\n  },\n  {\n    Header: \"Storage Location\",\n    accessor: \"storage_location\",\n    style: {textAlign: \"center\"},\n    minWidth: 65\n  },\n  {\n    Header: \"Key Status\",\n    accessor: \"key_status\",\n    style: { textAlign: \"center\" }\n  }\n];\n\nexport const keyFilter = [\n  { key: \"1\", text: \"\", value: \"\" },\n  // { key: '2', text: 'QR Code', value: 'qr'},\n  { key: \"3\", text: \"Property Number\", value: \"property_number\" },\n  { key: \"4\", text: \"Property Name\", value: \"property_name\" },\n  { key: \"5\", text: \"Key Type\", value: \"key_type\" },\n  { key: \"6\", text: \"Key Number\", value: \"storage_location\" },\n  { key: \"7\", text: \"Office Location\", value: \"office_location\" },\n  { key: \"8\", text: \"First Name\", value: \"first_name\" },\n  { key: \"9\", text: \"Last Name\", value: \"last_name\" },\n  { key: \"10\", text: \"Phone\", value: \"phone_num\" },\n  { key: \"11\", text: \"Company\", value: \"company\" },\n  { key: \"12\", text: \"Date Out\", value: \"checked_out\" },\n  { key: \"13\", text: \"Due Date\", value: \"due_date\" },\n  { key: \"14\", text: \"Deposit\", value: \"deposit\" },\n  { key: \"15\", text: \"Deposit Type\", value: \"deposit_type\" }\n];\n\nexport const propertyFilter = [\n  { key: \"1\", text: \"\", value: \"\" },\n  { key: \"2\", text: \"Property Name\", value: \"property_name\" },\n  { key: \"3\", text: \"Property Number\", value: \"property_number\" },\n  { key: \"4\", text: \"Key Type\", value: \"key_type\" },\n  { key: \"5\", text: \"Key Number\", value: \"key_number\" },\n  { key: \"6\", text: \"Office Location\", value: \"office_location\" },\n  { key: \"7\", text: \"Storage Location\", value: \"storage_location\" },\n  { key: \"8\", text: \"Key Status\", value: \"key_status\" }\n];\n","import React, { Component } from \"react\";\nimport { Input, Divider, Dropdown, Button } from \"semantic-ui-react\";\nimport ReportList from \"./ReportList\";\nimport * as ui from \"./ui\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nclass ReportDashboard extends Component {\n  handleValue = (e, { value }) => this.setState({ filterValue: value });\n  handleId = (e, { value }) => this.setState({ filterId: value });\n\n  async generateFullReport(e) {\n    e.preventDefault();\n    try {\n      let result = await fetch(`${process.env.REACT_APP_API_URL}/reports`);\n      if (!result.ok) throw Error(result.statusText);\n      const response = await result.json();\n      console.log(\"Report generated on server\");\n      window.open(`file://${response.filePath}`);\n    } catch (err) {\n      console.log(JSON.stringify(err.message));\n      window.alert(\"Report failure: \" + JSON.stringify(err.message));\n      return;\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterId: \"\",\n      filterValue: \"\",\n      tableType: this.props.tableType\n    };\n    this.handleId = this.handleId.bind(this);\n    this.handleValue = this.handleValue.bind(this);\n    this.generateFullReport = this.generateFullReport.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.tableType !== prevState.tableType) {\n      console.log(\"firing\");\n      return {\n        filterId: \"\",\n        filterValue: \"\",\n        tableType: nextProps.tableType\n      };\n    }\n    return null;\n  }\n\n  render() {\n    let columns = [];\n    let options = [];\n    let filter = {\n      id: this.state.filterId,\n      value: this.state.filterValue\n    };\n\n    switch (this.state.tableType) {\n      case \"keys\":\n        columns = ui.keyColumns;\n        options = ui.keyFilter;\n        break;\n      case \"properties\":\n        columns = ui.propertyColumns;\n        options = ui.propertyFilter;\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div>\n        <div>\n          <Dropdown\n            options={options}\n            selection\n            onChange={this.handleId}\n            value={this.state.value}\n            placeholder=\"Category...\"\n          />\n          <Input\n            style={{ paddingLeft: \"5px\" }}\n            icon=\"search\"\n            iconPosition=\"left\"\n            placeholder=\"Search...\"\n            onChange={this.handleValue}\n          />\n          <Button\n            floated=\"right\"\n            onClick={this.generateFullReport}\n            color=\"purple\"\n          >\n            Full Report\n          </Button>\n        </div>\n        <Divider />\n        <div>\n          <ReportList\n            type={this.props.tableType}\n            columns={columns}\n            filter={filter}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReportDashboard;\n","import React, { Component } from \"react\";\nimport { Menu, Dropdown, Container, Button } from \"semantic-ui-react\";\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\nimport { handleLogout } from \"../../../app/layout/App\"\n\nclass NavBar extends Component {\n\n  render() {\n    return (\n      <Menu inverted fluid fixed=\"top\">\n        <Container>\n          <Menu.Item as={Link} to=\"/\" header>\n            <img src=\"/assets/logo.png\" alt=\"logo\" />\n            Proline KTA\n          </Menu.Item>\n          <Dropdown item text=\"Records\">\n            <Dropdown.Menu>\n              <Dropdown.Item as={NavLink} to=\"/keys\">\n                Keys\n              </Dropdown.Item>\n              <Dropdown.Item as={NavLink} to=\"/properties\">\n                Properties\n              </Dropdown.Item>\n              <Dropdown.Item as={NavLink} to=\"/people\">\n                People\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Dropdown item text=\"Reports\">\n            <Dropdown.Menu>\n              <Dropdown.Item as={NavLink} to=\"/keyreports\">\n                Keys Checked Out\n              </Dropdown.Item>\n              <Dropdown.Item as={NavLink} to=\"/buildingreports\">\n                Properties\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          \n\n          <Dropdown item text=\"Forms\">\n            <Dropdown.Menu>\n              <Dropdown.Item as={NavLink} to=\"/generic\">\n                Generic\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <Menu.Item>\n            <Button\n              as={NavLink}\n              to=\"/createkey\"\n              name=\"addKey\"\n              floated=\"right\"\n              //positive\n              inverted\n              color=\"white\"\n              content=\"Add Key\"\n            />\n          </Menu.Item>\n\n          <Menu.Item>\n            <Button\n              as={NavLink}\n              to=\"/createproperty\"\n              name=\"addProperty\"\n              floated=\"right\"\n              //positive\n              inverted\n              color=\"white\"\n              content=\"Add Property\"\n            />\n          </Menu.Item>\n\n          <Menu.Item>\n          <Button\n            as={NavLink}\n            to=\"/createcontractor\"\n            name=\"addContractor\"\n            floated=\"right\"\n            //positive\n            inverted\n            color=\"white\"\n            content=\"Add Contractor\"\n          />\n        </Menu.Item>\n\n          <Menu.Item>\n            <Button\n              as={NavLink}\n              to=\"/scankey\"\n              name=\"checkKey\"\n              floated=\"right\"\n              //positive\n              inverted\n              color=\"white\"\n              content=\"Scan Key\"\n            />\n          </Menu.Item>\n\n          <Menu.Item>\n            <Button\n            name=\"signOut\"\n            floated=\"right\"\n            inverted\n            color=\"white\"\n            content=\"Sign Out\"\n            onClick={this.props.handleLogout}\n            />\n          </Menu.Item>\n        </Container>\n      </Menu>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { fetchLogin } from \"../../app/fetch/fetches\";\nimport {\n  Grid,\n  Header,\n  Segment,\n  Form,\n  Modal,\n  Button,\n  Input\n} from \"semantic-ui-react\";\n\nconst HomePage = props => {\n  return (\n    <div>\n      <div className=\"ui inverted vertical masthead center aligned segment\">\n        <div className=\"ui text container\">\n          <h1 className=\"ui inverted stackable header\">\n            <img\n              className=\"ui image massive\"\n              src=\"/assets/logo.png\"\n              alt=\"logo\"\n            />\n            <div className=\"content\">Proline KTA</div>\n          </h1>\n          <h2>Start Tracking Keys</h2>\n          <Modal\n            trigger={\n              <div className=\"ui huge white inverted button\">\n                Proceed\n                <i className=\"right arrow icon\" />\n              </div>\n            }\n            basic\n          >\n            <Modal.Content>\n              <Grid centered columns={2}>\n                <Grid.Column>\n                  <Segment>\n                    <Header as=\"h2\" textAlign=\"center\">\n                      Login\n                    </Header>\n                    <Form size=\"large\" onSubmit={props.login}>\n                      <Form.Input\n                        fluid\n                        icon=\"user\"\n                        iconPosition=\"left\"\n                        placeholder=\"User Name\"\n                        name=\"username\"\n                      />\n                      <Form.Input\n                        fluid\n                        icon=\"lock\"\n                        iconPosition=\"left\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        type=\"password\"\n                      />\n                      <Form.Button\n                        color=\"purple\"\n                        fluid\n                        size=\"large\"\n                        type=\"submit\"\n                        content=\"Submit\"\n                      />\n                    </Form>\n                  </Segment>\n                </Grid.Column>\n              </Grid>\n            </Modal.Content>\n          </Modal>\n        </div>\n      </div>\n      <div style={{ textAlign: \"center\" }}>\n        Developed for Proline Propety Management by Aidan Ranney, Jesse Johnston & Gary Walsh\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  TextArea,\n  Button,\n  Divider,\n  Form,\n  Dropdown,\n  Input,\n  Header\n} from \"semantic-ui-react\";\nimport { fetchRecord } from \"../../app/fetch/fetches\";\n\nexport default class AddProperty extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      propertyName: \"\",\n      propertyNumber: \"\",\n      propertyType: \"\",\n      comments: \"\",\n      redirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e, data) {\n    this.setState({\n      [data.name]: data.value\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const {\n      address,\n      city,\n      postalCode,\n      propertyName,\n      propertyNumber,\n      propertyType,\n      comments\n    } = this.state;\n    const request = {\n      address: address,\n      city: city,\n      postalCode: postalCode,\n      propertyName: propertyName,\n      propertyNumber: propertyNumber,\n      propertyType: propertyType,\n      comments: comments\n    };\n    await fetchRecord(request, \"POST\", \"/propertyrecord\", res => {\n      this.setState({redirect: true});\n    });\n  }\n\n  render() {\n    let redirect;\n    this.state.redirect ? redirect = (<Redirect to=\"/properties\" />) : redirect = null\n    const propTypeOptions = [\n      {\n        key: \"1\",\n        text: \"Strata\",\n        value: \"STRATA\"\n      },\n      {\n        key: \"2\",\n        text: \"Rental\",\n        value: \"RENTAL\"\n      },\n      {\n        key: \"3\",\n        text: \"Sundry\",\n        value: \"SUNDRY\"\n      },\n      {\n        key: \"4\",\n        text: \"Office\",\n        value: \"OFFICE\"\n      }\n    ];\n    const containerStyle = {\n      display: \"inline-block\",\n      paddingTop: 20,\n      textAlign: \"left\",\n      width: \"50%\"\n    };\n\n    return (\n      <div\n        style={{\n          marginTop: 10,\n          padding: 20,\n          display: \"block\",\n          textAlign: \"center\"\n        }}\n      >\n      {redirect}\n        <div style={containerStyle}>\n          <Form onSubmit={this.handleSubmit}>\n            <Header className=\"ui horizontal divider header\">\n              Create Property\n            </Header>\n            <Form.Field>\n              <label>Name</label>\n              <Input\n                placeholder=\"Property Name\"\n                onChange={this.handleChange}\n                name=\"propertyName\"\n                value={this.state.propertyName}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Building Number</label>\n              <Input\n                placeholder=\"####\"\n                onChange={this.handleChange}\n                name=\"propertyNumber\"\n                value={this.state.propertyNumber}\n                required\n                pattern='^[A-Za-z0-9]{4}'\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Address</label>\n              <Input\n                placeholder=\"Address\"\n                onChange={this.handleChange}\n                name=\"address\"\n                value={this.state.address}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>City</label>\n              <Input\n                placeholder=\"City\"\n                onChange={this.handleChange}\n                name=\"city\"\n                value={this.state.city}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Postal Code</label>\n              <Input\n                placeholder=\"V1V 1V1\"\n                onChange={this.handleChange}\n                name=\"postalCode\"\n                value={this.state.postalCode}\n                required\n                pattern='[A-Za-z]\\d[A-Za-z]\\s\\d[A-Za-z]\\d$'\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Property Type</label>\n              <Dropdown\n                name=\"propertyType\"\n                selection\n                placeholder=\"Property Type\"\n                onChange={this.handleChange}\n                value={this.state.propertyType}\n                options={propTypeOptions}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Comments</label>\n              <TextArea\n                style={{ minHeight: 100, width: \"50%\" }}\n                name=\"comments\"\n                fluid\n                placeholder=\"Additional Comments...\"\n                onChange={this.handleChange}\n                value={this.state.comments}\n              />\n            </Form.Field>\n            <Divider />\n            <Button type=\"submit\" color=\"purple\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { Button, Divider, Form, Input, Header } from \"semantic-ui-react\";\nimport { fetchRecord } from \"../../app/fetch/fetches\";\n\nexport default class EditContractor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: this.props.location.keyRecord.first_name,\n      lastName: this.props.location.keyRecord.last_name,\n      phoneNum: this.props.location.keyRecord.phone_num,\n      email: this.props.location.keyRecord.email,\n      company: this.props.location.keyRecord.company,\n      contractorId: this.props.location.keyRecord.contractor_id,\n      redirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e, data) {\n    this.setState({\n      [data.name]: data.value\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const { firstName, lastName, phoneNum, email, company, contractorId } = this.state;\n    const request = {\n      firstName: firstName,\n      lastName: lastName,\n      phoneNum: phoneNum,\n      email: email,\n      company: company,\n      contractorId: contractorId\n    };\n    await fetchRecord(request, \"PUT\", \"/contractors\", res => {\n      this.setState({redirect: true});\n    });\n  }\n  render() {\n    const containerStyle = {\n      display: \"inline-block\",\n      paddingTop: 20,\n      textAlign: \"left\",\n      width: \"50%\"\n    };\n    let redirect;\n    this.state.redirect ? redirect = (<Redirect to=\"/people\" />) : redirect = null;\n\n    return (\n      <div\n        style={{\n          marginTop: 10,\n          padding: 20,\n          display: \"block\",\n          textAlign: \"center\"\n        }}\n      >\n      {redirect}\n        <div style={containerStyle}>\n          <Form onSubmit={this.handleSubmit}>\n            <Header className=\"ui horizontal divider header\">\n              Edit Contractor\n            </Header>\n            <Form.Field>\n              <label>First Name</label>\n              <Input\n                placeholder=\"First Name\"\n                onChange={this.handleChange}\n                name=\"firstName\"\n                value={this.state.firstName}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Last Name</label>\n              <Input\n                placeholder=\"Last Name\"\n                onChange={this.handleChange}\n                name=\"lastName\"\n                value={this.state.lastName}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Phone Number</label>\n              <Input\n                placeholder=\"10 digits\"\n                onChange={this.handleChange}\n                name=\"phoneNum\"\n                value={this.state.phoneNum}\n                required\n                type='tel'\n                pattern='\\d{10}'\n              />\n            <Form.Field>\n                <label>E-Mail</label>\n                <Input\n                placeholder=\"you@domain.com\"\n                onChange={this.handleChange}\n                name=\"email\"\n                value={this.state.email}\n                type='email'\n            />\n            </Form.Field>\n            </Form.Field>\n            <Form.Field>\n              <label>Company</label>\n              <Input\n                placeholder=\"Company Name\"\n                onChange={this.handleChange}\n                name=\"company\"\n                value={this.state.company}\n                required\n              />\n            </Form.Field>\n            <Divider />\n            <Button type=\"submit\" color=\"purple\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { Button, Divider, Form, Input, Header } from \"semantic-ui-react\";\nimport { fetchRecord } from \"../../app/fetch/fetches\";\n\nexport default class AddContractor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      company: \"\",\n      redirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e, data) {\n    this.setState({\n      [data.name]: data.value\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const { firstName, lastName, phoneNum, email, company } = this.state;\n    const request = {\n      firstName: firstName,\n      lastName: lastName,\n      phoneNum: phoneNum,\n      email: email,\n      company: company\n    };\n    await fetchRecord(request, \"POST\", \"/contractors\", res => {\n      this.setState({redirect: true});\n    });\n  }\n  render() {\n    const containerStyle = {\n      display: \"inline-block\",\n      paddingTop: 20,\n      textAlign: \"left\",\n      width: \"50%\"\n    };\n    let redirect;\n    this.state.redirect ? redirect = (<Redirect to=\"/scankey\" />) : redirect = null;\n\n    return (\n      <div\n        style={{\n          marginTop: 10,\n          padding: 20,\n          display: \"block\",\n          textAlign: \"center\"\n        }}\n      >\n      {redirect}\n        <div style={containerStyle}>\n          <Form onSubmit={this.handleSubmit}>\n            <Header className=\"ui horizontal divider header\">\n              Add Contractor\n            </Header>\n            <Form.Field>\n              <label>First Name</label>\n              <Input\n                placeholder=\"First Name\"\n                onChange={this.handleChange}\n                name=\"firstName\"\n                value={this.state.firstName}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Last Name</label>\n              <Input\n                placeholder=\"Last Name\"\n                onChange={this.handleChange}\n                name=\"lastName\"\n                value={this.state.lastName}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Phone Number</label>\n              <Input\n                placeholder=\"10 digits\"\n                onChange={this.handleChange}\n                name=\"phoneNum\"\n                value={this.state.phoneNum}\n                required\n                type='tel'\n                pattern='\\d{10}'\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>E-Mail</label>\n              <Input\n              placeholder=\"you@domain.com\"\n              onChange={this.handleChange}\n              name=\"email\"\n              value={this.state.email}\n              type='email'\n            />\n            </Form.Field>\n            <Form.Field>\n              <label>Company</label>\n              <Input\n                placeholder=\"Company Name\"\n                onChange={this.handleChange}\n                name=\"company\"\n                value={this.state.company}\n                required\n              />\n            </Form.Field>\n            <Divider />\n            <Button type=\"submit\" color=\"purple\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nimport { Button, Divider } from \"semantic-ui-react\";\nimport ReactToPrint from \"react-to-print\";\nimport QRCode from \"qrcode.react\";\n\nclass GeneratedQRCode extends React.Component {\n  render() {\n    return (\n      <div>\n        <QRCode\n          style={{ paddingLeft: \"10px\", paddingTop: \"15px\"}}\n          value={this.props.qrCode}\n          level=\"L\"\n          renderAs=\"svg\"\n          size={92}\n        />\n          <p\n          style={{\n          fontSize: '25px',\n          fontWeight: 'bold',\n          transform: \"rotate(90deg)\",\n          transformOrigin: 'left top 0',\n          marginLeft: '70px',\n          marginTop: '15px'\n          }}>\n          {this.props.propNumber}-{this.props.keyType.charAt(0)}{this.props.keyNumber}-{this.props.keyQuantity}\n          </p>\n      </div>\n    );\n  }\n}\n\n//React-to-print makes use of a reference to our generated QR component class. The parent component is a\n//function\nconst PrintQRCode = props => {\n  const qrCode = `${props.propertyNumber}*${props.keyOfficeLocation}*${\n    props.keyType\n  }*${props.keyNumber}`;\n  console.log(qrCode);\n  const qrRef = React.useRef();\n  const [redirect, setRedirect] = useState(null)\n\n  return (\n    <div style={{width: '70%'}}>\n      {redirect}\n      <div style={{display: 'flex', justifyContent:'center'}}>\n      <GeneratedQRCode\n        propNumber={props.propertyNumber}\n        keyType={props.keyType}\n        keyQuantity={props.keyQuantity}\n        keyNumber={props.keyNumber}\n        qrCode={qrCode}\n        ref={qrRef}\n      />\n      </div>\n      <ReactToPrint\n        trigger={() => <Button floated='right' color='purple'>Print QR Code</Button>}\n        content={() => qrRef.current}\n        pageStyle={{display: 'absolute', left: '200px'}}\n        onAfterPrint={() => {setRedirect(<Redirect to=\"/keys\" />)}}\n      />\n    </div>\n  );\n};\n\nexport default PrintQRCode;\n","//Custom UI component making use of Semantic-UI's 'search' module and our database to generate input suggestions\n\nimport React, { Component } from \"react\";\nimport { Search } from \"semantic-ui-react\";\nimport { fetchNames } from \"../../app/fetch/fetches\";\n\nclass AutoComplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      results: [],\n      value: ''\n    }\n\n    this.handleResultSelect = this.handleResultSelect.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: result.title });\n    //Pass selected result back to parent if requested\n    if (this.props.onChange) {\n      console.log(\"fired\");\n      const data = {\n        name: this.props.name,\n        value: result.title\n      };\n      this.props.onChange(e, data);\n    }\n    if (this.props.selected) {\n      this.props.selected();\n    }\n  }\n\n  handleSearchChange(e, data) {\n    this.setState({ isLoading: true, value: data.value }, () => {\n      const request = {\n        tableName: this.props.table,\n        filterId: this.props.id,\n        filterValue: this.state.value\n      };\n      fetchNames(request, res => {\n        this.setState({\n          results: res,\n          isLoading: false\n        });\n      });\n      if (this.props.onChange) {\n        console.log(\"fired\");\n        const data = {\n          name: this.props.name,\n          value: this.state.value\n        };\n        this.props.onChange(e, data);\n      }\n    });\n  }\n\n  render() {\n    const { isLoading, value, results } = this.state;\n\n    return (\n      <Search\n        loading={isLoading}\n        onResultSelect={this.handleResultSelect}\n        onSearchChange={this.handleSearchChange}\n        results={results}\n        value={value}\n        showNoResults={false}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default AutoComplete;\n","//Dropdown option descriptions for the AddKey component\n\nexport const keyOfficeLocationOptions = [\n  {\n    key: \"1\",\n    text: \"Victoria\",\n    value: \"VICTORIA\"\n  },\n  {\n    key: \"2\",\n    text: \"Westshore\",\n    value: \"WESTSHORE\"\n  },\n  {\n    key: \"3\",\n    text: \"Courtenay\",\n    value: \"COURTENAY\"\n  },\n  {\n    key: \"4\",\n    text: \"Nanaimo\",\n    value: \"NANAIMO\"\n  }\n];\n\nexport const keyStatusOptions = [\n  {\n    key: 1,\n    text: \"In\",\n    value: \"IN\"\n  },\n  {\n    key: 2,\n    text: \"Pending\",\n    value: \"PENDING\"\n  },\n  {\n    key: 3,\n    text: \"Out\",\n    value: \"OUT\"\n  },\n  {\n    key: 4,\n    text: \"Lost\",\n    value: \"LOST\"\n  },\n  {\n    key: 5,\n    text: \"Sold\",\n    value: \"SOLD\"\n  },\n  {\n    key: 6,\n    text: \"Destroyed\",\n    value: \"DESTROYED\"\n  }\n];\n\nexport const keyTypeOptions = [\n  {\n    key: \"1\",\n    text: \"Master\",\n    value: \"MASTER\"\n  },\n  {\n    key: \"2\",\n    text: \"Trades\",\n    value: \"TRADES\"\n  },\n  {\n    key: \"3\",\n    text: \"FOB\",\n    value: \"FOB\"\n  },\n  {\n    key: \"4\",\n    text: \"Garage\",\n    value: \"GARAGE\"\n  },\n  {\n    key: \"5\",\n    text: \"Elevator\",\n    value: \"ELEVATOR\"\n  },\n  {\n    key: \"6\",\n    text: \"Proline\",\n    value: \"PROLINE\"\n  },\n  {\n    key: \"7\",\n    text: \"Guest Room\",\n    value: \"GUEST-ROOM\"\n  }\n];\n","//Component to render a form and handle submissions of new records of keys to the database\n\nimport React from \"react\";\nimport { Button, Form, Dropdown, Input, Header } from \"semantic-ui-react\";\nimport PrintQRCode from \"./PrintQRCode\";\nimport { fetchRecord } from \"../../app/fetch/fetches\";\nimport AutoComplete from \"./AutoComplete\";\nimport * as ui from \"./ui\";\n\nclass AddKey extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\",\n      city: \"\",\n      keyStorageLocation: \"\",\n      keyOfficeLocation: \"\",\n      keyQuantity: 0,\n      keyNumber: 0,\n      keyType: \"\",\n      deposit: 0,\n      showQR: false,\n      propertyNumber: \"\",\n      keyNumber: 0,\n      selected: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelected = this.handleSelected.bind(this);\n  }\n\n  handleChange(e, data) {\n    this.setState({\n      [data.name]: data.value\n    });\n  }\n\n  handleSelected() {\n    this.setState({selected: true});\n  }\n\n  async handleSubmit(e, data) {\n    e.preventDefault();\n    console.log(data);\n    const {\n      city,\n      keyStorageLocation,\n      keyOfficeLocation,\n      keyQuantity,\n      keyType,\n      address,\n      deposit\n    } = this.state;\n    const request = {\n      address: address,\n      city: city,\n      keyStorageLocation: keyStorageLocation,\n      keyOfficeLocation: keyOfficeLocation,\n      keyQuantity: keyQuantity,\n      keyType: keyType,\n      deposit: deposit\n    };\n    await fetchRecord(request, \"POST\", \"/keyrecord\", res => {\n      this.setState({\n        showQR: true,\n        propertyNumber: res.property_number,\n        keyNumber: res.key_number\n      });\n    });\n  }\n\n  render() {\n    const containerStyle = {\n      display: \"inline-block\",\n      paddingTop: 20,\n      textAlign: \"left\",\n      width: \"50%\"\n    };\n\n    if (!this.state.showQR) {\n      return (\n        <div\n          style={{\n            marginTop: 10,\n            padding: 20,\n            display: \"block\",\n            textAlign: \"center\"\n          }}\n        >\n          <div style={containerStyle}>\n            <Form onSubmit={this.handleSubmit}>\n              <Header className=\"ui horizontal divider header\">\n                Create Key\n              </Header>\n              <Form.Field>\n                <label>Street Address</label>\n                <AutoComplete\n                  table=\"address_tab\"\n                  id=\"address\"\n                  as={Input}\n                  onChange={this.handleChange}\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  selected={this.handleSelected}\n                />\n              </Form.Field>\n              <Form.Field>\n              <label>City</label>\n              <Input\n                onChange={this.handleChange}\n                value={this.state.city}\n                placeholder=\"City\"\n                name=\"city\"\n                required\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Storage Location</label>\n              <Input\n                onChange={this.handleChange}\n                value={this.state.keyStorageLocation}\n                placeholder=\"Storage Location\"\n                name=\"keyStorageLocation\"\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Office Location</label>\n              <Dropdown\n                options={ui.keyOfficeLocationOptions}\n                onChange={this.handleChange}\n                value={this.state.keyOfficeLocation}\n                selection\n                name=\"keyOfficeLocation\"\n                placeholder=\"Office location...\"\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Key Quantity</label>\n              <Input\n                onChange={this.handleChange}\n                value={this.state.keyQuantity}\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"Key Quantity\"\n                name=\"keyQuantity\"\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Key Type</label>\n              <Dropdown\n                options={ui.keyTypeOptions}\n                onChange={this.handleChange}\n                value={this.state.keyType}\n                selection\n                name=\"keyType\"\n                placeholder=\"Key Type\"\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Deposit</label>\n              <Input\n                onChange={this.handleChange}\n                value={this.state.deposit}\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"Is there a deposit on the key?\"\n                name=\"deposit\"\n              />\n              </Form.Field>\n              <br />\n              <Button type=\"submit\" color=\"purple\">\n                Submit\n              </Button>\n            </Form>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <PrintQRCode\n          propertyNumber={this.state.propertyNumber}\n          keyOfficeLocation={this.state.keyOfficeLocation}\n          keyType={this.state.keyType}\n          keyNumber={this.state.keyNumber}\n          keyQuantity={this.state.keyQuantity}\n        />\n      );\n    }\n  }\n}\n\nexport default AddKey;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\n\n// --------------------------- Create User State --------------------------------\nconst initialCreateState = {\n  fname: '',\n  lname: '',\n  username: '',\n  createEmail: '',\n  createPassword: '',\n  phone: '',\n  address: '',\n  fnameCreateError: '',\n  lnameCreateError: '',\n  usernameCreateError: '',\n  emailreateError: '',\n  passwordCreateError: '',\n  phoneCreateError: '',\n  addressCreateError: ''\n}\n\n\n// --------------------------- Login State -----------------------\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n  nameError: '',\n  emailError: '',\n  passwordError: ''\n}\n\nexport default class TestingForm extends React.Component {\n  // -------------- Create user Functions ------------------------\n  createState = initialCreateState;\n\n  handleCreateChange = event => {\n    const isCreateCheckbox = event.target.type === \"checkbox\";\n    this.setState({\n      [event.target.fname] : isCreateCheckbox\n      ? event.target.checked\n      : event.target.value\n    });\n  };\n\n  createValidate = () => {\n    let fnameCreateError = '';\n    let lnameCreateError = '';\n    let usernameCreateError = '';\n    let emailCreateError = '';\n    let passwordCreateError = '';\n    let phoneCreateError = '';\n    let addressCreateError = '';\n\n    if (!this.createState.createPassword) {\n      passwordCreateError = \"Please enter a valid password\";\n    } \n\n    if (!this.createState.fname) {\n      fnameCreateError = \"First name cannot be empty\";\n    }\n\n    if (!this.createState.lname) {\n      lnameCreateError = \"last name cannot be empty\";\n    }\n\n    if (!this.createState.username) {\n      usernameCreateError = \"username cannot be empty\";\n    }\n\n    if (!this.createState.phone) {\n      phoneCreateError = \"Phone number cannot be empty\";\n    }\n\n    if (!this.createState.address) {\n      addressCreateError = \"Address cannot be empty\";\n    }\n\n    if (!this.createState.createEmail.includes(\"@\")) {\n      emailCreateError = \"Email cannot be empty\";\n    }\n\n    if (emailCreateError || fnameCreateError || lnameCreateError|| usernameCreateError || phoneCreateError || addressCreateError || passwordCreateError) {\n      this.setState({emailCreateError, fnameCreateError, lnameCreateError, usernameCreateError, phoneCreateError, addressCreateError,  passwordCreateError});\n      return false;\n    }\n      return true;\n  };\n\n  handleCreateSubmit = event => {\n    event.preventDefault();\n    const isCreateValid = this.createValidate();\n    if (isCreateValid) {\n      console.log(this.createState);  \n    // clear form \n    this.setState(initialCreateState);\n    }\n  };\n\n  // -------------- Login Functions ------------------------------\n  state = initialState;\n\n  handleChange = event => {\n    const isCheckbox = event.target.type === \"checkbox\";\n    this.setState({\n    [event.target.name] : isCheckbox\n    ? event.target.checked\n    : event.target.value\n    });\n  };\n\n  validate = () => {\n    let nameError = '';\n    let emailError = '';\n    let passwordError = '';\n\n    if (!this.state.password) {\n      passwordError = \"Please enter a valid password\";\n    } \n\n    if (!this.state.name) {\n      nameError = \"Name cannot be blank\";\n    }\n\n    if (!this.state.email.includes(\"@\")) {\n      emailError = \"Email cannot be blank\";\n    }\n\n    if (emailError || nameError || passwordError) {\n      this.setState({emailError, nameError, passwordError});\n      return false;\n    }\n      return true;\n  };\n  \n  handleSubmit = event => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      console.log(this.state);  \n    // clear form \n    this.setState(initialState);\n    }\n  };\n\n  render() {\n    return(\n      // ------------------------------------- Login Form -------------------------------------------\n      <Grid centered columns={2}>\n        <Grid.Column>\n      <form class=\"ui form\" onSubmit ={this.handleSubmit}>\n        <div class=\"ui form very padded segment\"> \n        <h2 class = \"ui horizontal divider header\"> Login Form </h2>\n        <div class=\"field\">\n          <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.nameError} \n            </div>\n        </div>\n\n        <div class=\"field\">\n          <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"email\"\n          value={this.state.email}\n          onChange={this.handleChange}\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.emailError} \n            </div>\n          </div>\n\n          <div class=\"field\">\n          <input\n          name=\"password\"\n          placeholder=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          type=\"password\"\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.passwordError} \n            </div>\n          </div>\n\n        <button class=\"ui primary button\" type=\"submit\"> Submit </button>\n        </div>\n      </form>\n      </Grid.Column>\n      \n      {/*  ------------------------------------- Create User Form --------------------------------------------------- */}\n    <Grid.Column>\n    <form class=\"ui form\" onSubmit ={this.handleCreateSubmit}>\n\n    <div class=\"ui form very padded segment\"> \n        <h2 class = \"ui horizontal divider header\"> Create/Update User Form </h2>\n        <div class = \"fields\"> \n        <div class=\"eight wide field\">\n          <input\n          type=\"text\"\n          name=\"firstname\"\n          placeholder=\"first name\"\n          value={this.state.createFirstName}\n          onChange={this.handleCreateChange}\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.fnameCreateError} \n            </div>\n        </div>\n\n        <div class=\"eight wide field\">\n          <input\n          type=\"text\"\n          name=\"lastname\"\n          placeholder=\"last name\"\n          value={this.state.createLastName}\n          onChange={this.handleCreateChange}\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.lnameCreateError} \n            </div>\n        </div>\n        </div>\n\n        <div class=\"field\">\n          <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"username\"\n          value={this.state.createUsername}\n          onChange={this.handleCreateChange}\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.usernameCreateError} \n            </div>\n        </div>\n\n        <div class=\"field\">\n          <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"email address\"\n          value={this.state.createEmail}\n          onChange={this.handleCreateChange}\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.emailCreateError} \n            </div>\n        </div>\n        \n        <div class=\"field\">\n          <input\n          name=\"password\"\n          placeholder=\"temporary password\"\n          value={this.state.createPassword}\n          onChange={this.handleCreateChange}\n          type=\"password\"\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.passwordCreateError} \n            </div>\n        </div>\n\n        <div class=\"field\">\n          <input\n          type=\"text\"\n          name=\"phone\"\n          placeholder=\"phone number\"\n          value={this.state.createPhone}\n          onChange={this.handleCreateChange}\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.phoneCreateError} \n            </div>\n        </div>\n\n        <div class=\"field\">\n          <input\n          type=\"text\"\n          name=\"address\"\n          placeholder=\"address\"\n          value={this.state.createAddress}\n          onChange={this.handleCreateChange}\n          />\n            <div style={{fontSize: 12, color: \"red\"}}> \n              {this.state.addressCreateError} \n            </div>\n        </div>\n\n        <div class=\"field\">\n          <label> User Privilege </label>\n          <select class=\"ui fluid dropdown\">\n            <option value=\"\"> Select </option>\n            <option value=\"admin\"> Administrator </option>\n            <option value=\"user\"> Regular User </option>\n          </select>\n        </div>\n\n        <div class=\"field\">\n          <label> Department </label>\n          <select class=\"ui fluid dropdown\">\n            <option value=\"\"> Select </option>\n            <option value=\"IT\"> IT </option>\n            <option value=\"HR\"> HR </option>\n          </select>\n        </div>\n\n        <button class=\"ui primary button\" type=\"submit\"> Save </button>\n        <button class=\"ui button\" type=\"cancel\"> Cancel </button>\n        <button class=\"ui red button\" type=\"delete\"> Delete </button>\n    </div>\n    </form>\n    </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\n","import React from \"react\";\nimport { Form, Divider, Header, Grid, Table, Segment } from \"semantic-ui-react\";\n\nconst KeyPending = props => {\n  return (\n    <div>\n      <Grid columns={2} divided>\n        <Grid.Row stretched>\n          <Grid.Column>\n            <Segment>\n              <Table definition>\n                <Table.Header>\n                  <Table.Row />\n                </Table.Header>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>Address</Table.Cell>\n                    <Table.Cell>{props.keyRecord.address}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>City</Table.Cell>\n                    <Table.Cell>{props.keyRecord.city}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Property Name</Table.Cell>\n                    <Table.Cell>{props.keyRecord.propertyName}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Property Number</Table.Cell>\n                    <Table.Cell>{props.keyRecord.propertyNumber}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Property Type</Table.Cell>\n                    <Table.Cell>{props.keyRecord.propertyType}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Key Type</Table.Cell>\n                    <Table.Cell>{props.keyRecord.keyType}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Storage Location</Table.Cell>\n                    <Table.Cell>\n                      {props.keyRecord.keyStorageLocation}\n                    </Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Office Location</Table.Cell>\n                    <Table.Cell>{props.keyRecord.keyOfficeLocation}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Deposit</Table.Cell>\n                    <Table.Cell>{props.keyRecord.deposit}</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment textAlign=\"center\">\n              <Form onSubmit={props.isPending}>\n                <Header>Place Key Into Pending</Header>\n                <Divider />\n                <Form.Button color=\"purple\" content=\"Submit\" />\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default KeyPending;\n","import React from \"react\";\nimport {\n  Grid,\n  Segment,\n  Table,\n  Form,\n  Divider,\n  Header,\n  Input,\n  Checkbox\n} from \"semantic-ui-react\";\nimport AutoComplete from \"./AutoComplete\";\n\nconst CheckKeyOut = props => {\n\n  const containerStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingTop: \"10%\"\n  };\n\n \n\n  return (\n    <div style={{ containerStyle }}>\n      <Grid columns={2} divided>\n        <Grid.Row stretched>\n          <Grid.Column>\n            <Segment>\n              <Table definition>\n                <Table.Header>\n                  <Table.Row />\n                </Table.Header>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>Address</Table.Cell>\n                    <Table.Cell>{props.keyRecord.address}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>City</Table.Cell>\n                    <Table.Cell>{props.keyRecord.city}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Property Name</Table.Cell>\n                    <Table.Cell>{props.keyRecord.propertyName}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Property Number</Table.Cell>\n                    <Table.Cell>{props.keyRecord.propertyNumber}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Property Type</Table.Cell>\n                    <Table.Cell>{props.keyRecord.propertyType}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Key Type</Table.Cell>\n                    <Table.Cell>{props.keyRecord.keyType}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Storage Location</Table.Cell>\n                    <Table.Cell>\n                      {props.keyRecord.keyStorageLocation}\n                    </Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Office Location</Table.Cell>\n                    <Table.Cell>{props.keyRecord.keyOfficeLocation}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Deposit</Table.Cell>\n                    <Table.Cell>{props.keyRecord.deposit}</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment>\n              <Form onSubmit={props.checkout}>\n                <Header textAlign=\"center\">Check Out Pending Key</Header>\n                <Divider />\n                <Form.Field>\n                  <label>Company</label>\n                  <AutoComplete\n                    table=\"contractor_tab\"\n                    id=\"company\"\n                    as={Input}\n                    required\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>First Name</label>\n                  <AutoComplete\n                    table=\"contractor_tab\"\n                    id=\"first_name\"\n                    as={Input}\n                    required\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Last Name</label>\n                  <AutoComplete\n                    table=\"contractor_tab\"\n                    id=\"last_name\"\n                    as={Input}\n                    required\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Deposit</label>\n                  <input id=\"deposit\" type=\"number\" min=\"0\" />\n                </Form.Field>\n                <Form.Field>\n                  <label>Deposit Type</label>\n                  <select id=\"depositType\" style={{height: \"40px\"}} >\n                    <option value=\"\"></option>\n                    <option value=\"CASH\">Cash</option>\n                    <option value=\"CHEQUE\">Cheque</option>\n                  </select>\n                </Form.Field>\n                <Form.Field>\n                  <label>Fees</label>\n                  <input id=\"fees\" type=\"number\" min=\"0\" />\n                </Form.Field>\n                <Form.Field>\n                  <label>Notes</label>\n                  <input id=\"notes\" />\n                </Form.Field>\n                <Form.Group>\n                  <Form.Button color=\"purple\" content=\"Submit\" />\n                  <Form.Field>\n                    <Checkbox label=\"This is a sale\" inline id=\"sale\" />\n                    <Checkbox label=\"This a rental exit\" inline id=\"exit\" style={{marginLeft:\"15px\"}} />\n                  </Form.Field>\n                </Form.Group>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default CheckKeyOut;\n","import React from \"react\";\nimport { Form, Divider, Header, Grid, Table, Segment } from \"semantic-ui-react\";\n\nconst CheckKeyIn = props => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <Grid columns={2} divided>\n        <Grid.Row stretched>\n          <Grid.Column>\n            <Header textAlign=\"center\">Key Information</Header>\n            <Segment>\n              <Table definition>\n                <Table.Header>\n                  <Table.Row />\n                </Table.Header>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>Address</Table.Cell>\n                    <Table.Cell>{props.keyRecord.address}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>City</Table.Cell>\n                    <Table.Cell>{props.keyRecord.city}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Property Name</Table.Cell>\n                    <Table.Cell>{props.keyRecord.propertyName}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                  <Table.Cell>Property Number</Table.Cell>\n                  <Table.Cell>{props.keyRecord.propertyNumber}</Table.Cell>\n                </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Property Type</Table.Cell>\n                    <Table.Cell>{props.keyRecord.propertyType}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Key Type</Table.Cell>\n                    <Table.Cell>{props.keyRecord.keyType}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Storage Location</Table.Cell>\n                    <Table.Cell>\n                      {props.keyRecord.keyStorageLocation}\n                    </Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Office Location</Table.Cell>\n                    <Table.Cell>{props.keyRecord.keyOfficeLocation}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Deposit</Table.Cell>\n                    <Table.Cell>{props.keyRecord.deposit}</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Header textAlign=\"center\">Transaction Info</Header>\n            <Segment>\n              <Table definition>\n                <Table.Header>\n                  <Table.Row />\n                </Table.Header>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>Checked Out</Table.Cell>\n                    <Table.Cell>{props.transaction.checkedOut}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>By</Table.Cell>\n                    <Table.Cell>\n                      {props.transaction.firstName} {props.transaction.lastName}\n                    </Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Company</Table.Cell>\n                    <Table.Cell>{props.transaction.company}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Due Date</Table.Cell>\n                    <Table.Cell>{props.transaction.dueDate}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Deposit</Table.Cell>\n                    <Table.Cell>{props.transaction.deposit}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Fees</Table.Cell>\n                    <Table.Cell>{props.transaction.fees}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Payment Type</Table.Cell>\n                    <Table.Cell>{props.transaction.depositType}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Notes</Table.Cell>\n                    <Table.Cell>{props.transaction.notes}</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <div style={{ display: \"inline-block\", paddingTop: \"2%\" }}>\n        <Segment compact floated=\"right\" textAlign=\"center\">\n          <Form onSubmit={props.checkin}>\n            <Header>Check Key Back In</Header>\n            <Divider />\n            <Form.Button color=\"purple\" content=\"Submit\" />\n          </Form>\n        </Segment>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckKeyIn;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport {\n  Grid,\n  Segment,\n  Radio,\n  Checkbox,\n  Label,\n  Input,\n  Button,\n  Form,\n  Divider,\n  Header\n} from \"semantic-ui-react\";\nimport ReactToPrint from \"react-to-print\";\n\nclass CohoSlip extends React.Component {\n  state = {};\n  handleChange = (e, { value }) => this.setState({ value });\n\n  render() {\n    const containerStyle = {\n      display: \"auto\",\n      justifyContent: \"center\",\n      transform: \"scale(.80)\",\n    };\n    let date = moment().format(\"YYYY-MM-DD\");\n    let dueDate = moment()\n      .add(\"days\", 30)\n      .format(\"YYYY-MM-DD\");\n\n    return (\n      <div style={ containerStyle }>\n        <Divider />\n        <Grid columns={1}>\n          <Grid.Row stretched>\n            <Grid.Column>\n              <Segment>\n                <Form>\n                  <Header textAlign=\"center\">Guest Room - COHO</Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Out</label>\n                        <input type=\"date\" id=\"dateOut\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date Due</label>\n                        <input\n                          type=\"date\"\n                          id=\"dueDate\"\n                          defaultvalue={dueDate}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Building</label>\n                    <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.propertyName} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input\n                          type=\"text\"\n                          id=\"firstName\"\n                          defaultValue={this.props.autofill.firstName}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input\n                          type=\"text\"\n                          id=\"lastName\"\n                          defaultValue={this.props.autofill.lastName}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"three fields\">\n                      <div class=\"field\">\n                        <label>Deposit</label>\n                        <Input\n                          labelPosition=\"right\"\n                          type=\"text\"\n                          id=\"deposit\"\n                          defaultValue={this.props.autofill.deposit}\n                        >\n                          <Label basic>$</Label>\n                          <input />\n                          <Label>.00</Label>\n                        </Input>\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <label>Paid By:</label>\n                        <Checkbox\n                          radio\n                          label=\"Cash\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cash\"\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CASH\"\n                              ? true\n                              : false\n                          }\n                          checked={this.state.value === \"cash\"}\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <br />\n                        <Checkbox\n                          radio\n                          label=\"Cheque\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cheque\"\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CHEQUE\"\n                              ? true\n                              : false\n                          }\n                          checked={this.state.value === \"cheque\"}\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Divider />\n                  <Header textAlign=\"center\">\n                    Please return to:\n                    <br />\n                    PROLINE MANAGEMENT LTD.\n                    <br />\n                    201 - 20 Burnside Road West, Victoria BC V9A 1B3\n                    <Divider horizontal>\n                      <i class=\"cut icon\" />\n                    </Divider>\n                  </Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Address</label>\n                        <input type=\"text\" id=\"address\" defaultValue={this.props.autofill.address} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Unit</label>\n                        <input type=\"text\" id=\"unit\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" defaultValue={this.props.autofill.address} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" defaultValue={this.props.autofill.address} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Signature</label>\n                    <input style={{ minHeight: \"5em\" }} disabled />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Phone Number</label>\n                    <input type=\"text\" id=\"phone\" defaultValue={this.props.autofill.phone_num} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"three fields\">\n                      <div class=\"field\">\n                        <label>Deposit</label>\n                        <Input labelPosition=\"right\" type=\"text\" id=\"deposit\" defaultValue={this.props.autofill.deposit} >\n                          <Label basic>$</Label>\n                          <input />\n                          <Label>.00</Label>\n                        </Input>\n                      </div>\n                      <div class=\"field\">\n                        <label>Nightly + Cleaning Fee Total</label>\n                        <Input labelPosition=\"right\" type=\"text\" id=\"fees\" defaultValue={this.props.autofill.fees} >\n                          <Label basic>$</Label>\n                          <input />\n                          <Label>.00</Label>\n                        </Input>\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Paid By</label>\n                        <Checkbox\n                          radio\n                          label=\"Cash\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cash\"\n                          checked={this.state.value === \"cash\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CASH\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <Checkbox\n                          radio\n                          label=\"Cheque\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cheque\"\n                          checked={this.state.value === \"cheque\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CHEQUE\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Out</label>\n                        <input type=\"date\" id=\"outDate\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Due Date</label>\n                        <input\n                          type=\"date\"\n                          id=\"dueDate\"\n                          defaultValue={dueDate}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n                </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst PrintCohoSlip = () => {\n  const slipRef = React.useRef();\n  const [redirect, setRedirect] = useState(null);\n  return (\n    <div>\n      {redirect}\n      <ReactToPrint\n        trigger={() => <Button color=\"purple\">Print Slip</Button>}\n        content={() => slipRef.current}\n        onAfterPrint={() => {\n          setRedirect(<Redirect to=\"/keyreports\" />);\n        }}\n      />\n      <CohoSlip ref={slipRef}\n                \n                />\n    </div>\n  );\n};\n\nexport default PrintCohoSlip;\n","import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Grid,\n  Segment,\n  Radio,\n  Checkbox,\n  Label,\n  Input,\n  Button,\n  Form,\n  Divider,\n  Header\n} from \"semantic-ui-react\";\nimport ReactToPrint from \"react-to-print\";\n\nclass ElevatorSlip extends React.Component {\n  state = {};\n  handleChange = (e, { value }) => this.setState({ value });\n\n  render() {\n    const containerStyle = {\n      display: \"auto\",\n      justifyContent: \"center\",\n      transform: \"scale(.80)\",\n    };\n    let date = moment().format('YYYY-MM-DD');\n    let dueDate = moment().add('days', 30).format('YYYY-MM-DD');\n\n    return (\n      <div style={ containerStyle }>\n        <Grid columns={1}>\n          <Grid.Row stretched>\n            <Grid.Column />\n            <Grid.Column>\n              <Segment>\n                <Form>\n                  <Header textAlign=\"center\">Elevator/Garage</Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Out</label>\n                        <input type=\"date\" id=\"dateOut\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date Due</label>\n                        <input type=\"date\" id=\"dueDate\" defaultValue={dueDate} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Address</label>\n                    <input type=\"text\" id=\"address\" defaultValue={this.props.autofill.address} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" defaultValue={this.props.autofill.firstname} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" defaultValue={this.props.autofill.lastName} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"three fields\">\n                      <div class=\"field\">\n                        <label>Deposit</label>\n                        <Input labelPosition=\"right\" type=\"text\" id=\"deposit\" defaultValue={this.props.autofill.deposit} >\n                          <Label basic>$</Label>\n                          <input />\n                          <Label>.00</Label>\n                        </Input>\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <label>Paid By:</label>\n                        <Checkbox\n                          radio\n                          label=\"Cash\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cash\"\n                          checked={this.state.value === \"cash\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CASH\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <br />\n                        <Checkbox\n                          radio\n                          label=\"Cheque\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cheque\"\n                          checked={this.state.value === \"cheque\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CHEQUE\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Divider />\n                  <Header textAlign=\"center\">\n                    Please return to:\n                    <br />\n                    PROLINE MANAGEMENT LTD.\n                    <br />\n                    201 - 20 Burnside Road West, Victoria BC V9A 1B3\n                    <Divider horizontal>\n                      <i class=\"cut icon\" />\n                    </Divider>\n                  </Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Address</label>\n                        <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.address} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Unit</label>\n                        <input type=\"text\" id=\"unit\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" defaultValue={this.props.autofill.firstName} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" defaultValue={this.props.autofill.lastName} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Signature</label>\n                    <input style={{ minHeight: \"5em\" }} disabled />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Phone Number</label>\n                    <input type=\"text\" id=\"phone\" defaultValue={this.props.autofill.phone_num} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"three fields\">\n                      <div class=\"field\">\n                        <label>Deposit</label>\n                        <Input labelPosition=\"right\" type=\"text\" id=\"deposit\" defaultValue={this.props.autofill.deposit} >\n                          <Label basic>$</Label>\n                          <input />\n                          <Label>.00</Label>\n                        </Input>\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <label>Paid By:</label>\n                        <Checkbox\n                          radio\n                          label=\"Cash\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cash\"\n                          checked={this.state.value === \"cash\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CASH\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <br />\n                        <Checkbox\n                          radio\n                          label=\"Cheque\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cheque\"\n                          checked={this.state.value === \"cheque\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CHEQUE\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Out</label>\n                        <input type=\"date\" id=\"dateOut\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date Due</label>\n                        <input type=\"date\" id=\"dueDate\" defaultValue={dueDate} />\n                      </div>\n                    </div>\n                  </Form.Field>\n                </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst PrintElevatorSlip = () => {\n  const slipRef = React.useRef();\n  const [redirect, setRedirect] = useState(null);\n  return (\n    <div>\n      {redirect}\n      <ReactToPrint\n        trigger={() => <Button color=\"purple\">Print Slip</Button>}\n        content={() => slipRef.current}\n        onAfterPrint={() => {setRedirect(<Redirect to=\"/keyreports\" />)}}\n      />\n      <ElevatorSlip ref={slipRef} />\n    </div>\n  );\n};\n\nexport default PrintElevatorSlip;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport {\n  Grid,\n  Segment,\n  Radio,\n  Checkbox,\n  Label,\n  Input,\n  Button,\n  Form,\n  Divider,\n  Header\n} from \"semantic-ui-react\";\nimport ReactToPrint from \"react-to-print\";\n\nclass FobSlip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange = (e, { value }) => this.setState({ value });\n\n\n\n  render() {\n    const containerStyle = {\n      display: \"auto\",\n        justifyContent: \"center\",\n        transform: \"scale(.80)\",\n    }\n\n    let date = moment().format(\"YYYY-MM-DD\");\n    let dueDate = moment()\n      .add(\"days\", 30)\n      .format(\"YYYY-MM-DD\");\n    \n    return (\n      <div style={ containerStyle } >\n        <Grid columns={1}>\n          <Grid.Row stretched>\n            <Grid.Column />\n            <Grid.Column>\n              <Segment>\n                <Form>\n                  <Header textAlign=\"center\">Proline Keys/Fobs</Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Out</label>\n                        <input type=\"date\" id=\"dateOut\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date Due</label>\n                        <input\n                          type=\"date\"\n                          id=\"dueDate\"\n                          defaultValue={dueDate}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Building Address</label>\n                        <input type=\"text\" id=\"address\" defaultValue={this.props.autofill.address} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Unit</label>\n                        <input type=\"text\" id=\"unit\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Contractor</label>\n                    <input type=\"text\" id=\"contractor\" defaultValue={this.props.autofill.company} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Notes</label>\n                    <input style={{ minHeight: \"5em\" }} id=\"notes\" defaultValue={this.props.autofill.notes} />\n                  </Form.Field>\n\n                  <Divider />\n                  <Header textAlign=\"center\">\n                    Please return to:\n                    <br />\n                    PROLINE MANAGEMENT LTD.\n                    <br />\n                    201 - 20 Burnside Road West, Victoria BC V9A 1B3\n                    <Divider horizontal>\n                      <i class=\"cut icon\" />\n                    </Divider>\n                  </Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Building Address</label>\n                        <input type=\"text\" id=\"address\" defaultValue={this.props.autofill.address} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Unit</label>\n                        <input type=\"text\" id=\"unit\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <Header textAlign=\"center\">Party Picking Up</Header>\n                    <div class=\"three fields\">\n                      <div class=\"field\">\n                        <label>Company</label>\n                        <input type=\"text\" id=\"company\" defaultValue={this.props.autofill.company} />\n                      </div>\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" defaultValue={this.props.autofill.firstName} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" defaultValue={this.props.autofill.lastName} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Signature</label>\n                    <input style={{ minHeight: \"5em\" }} disabled />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Phone Number</label>\n                    <input type=\"text\" id=\"phone\" defaultValue={this.props.autofill.phone_num} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"four fields\">\n                      <div class=\"field\">\n                        <br />\n                        <br />\n                        <Checkbox\n                          radio\n                          label=\"To Return\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"return\"\n                          checked={this.state.value === \"return\"}\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <br />\n                        <Checkbox\n                          radio\n                          label=\"To Keep\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"keep\"\n                          checked={this.state.value === \"keep\"}\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <br />\n                        <Checkbox\n                          radio\n                          label=\"Purchase\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"purchase\"\n                          checked={this.state.value === \"purchase\"}\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <label>Deposit</label>\n                        <Input labelPosition=\"right\" type=\"text\" id=\"deposit\" defaultValue={this.props.autofill.deposit}>\n                          <Label basic>$</Label>\n                          <input />\n                          <Label>.00</Label>\n                        </Input>\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Left At Reception By</label>\n                    <input type=\"text\" id=\"opStaff\" />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Due Date:</label>\n                    <input type=\"date\" id=\"dueDate\" defaultValue={dueDate} />\n                  </Form.Field>\n                </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst PrintFobSlip = (props) => {\n  const slipRef = React.useRef();\n  const [redirect, setRedirect] = useState(null);\n  console.log(\"print slip props: \" + props);\n  return (\n    <div>\n      {redirect}\n      <ReactToPrint\n        trigger={() => <Button color=\"purple\">Print Slip</Button>}\n        content={() => slipRef.current}\n        onAfterPrint={() => {\n        setRedirect(<Redirect to=\"/keyreports\" />);\n      }}\n      />\n\n      <FobSlip autofill={props.autofill} ref={slipRef} />\n\n    </div>\n  );\n};\n\nexport default PrintFobSlip;\n","import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Grid,\n  Segment,\n  Radio,\n  Checkbox,\n  Label,\n  Input,\n  Button,\n  Form,\n  Divider,\n  Header\n} from \"semantic-ui-react\";\nimport ReactToPrint from \"react-to-print\";\n\nclass GuestSlip extends React.Component {\n  state = {};\n  handleChange = (e, { value }) => this.setState({ value });\n\n  render() {\n    const containerStyle = {\n      display: \"auto\",\n      justifyContent: \"center\",\n      transform: \"scale(.80)\",\n        \n    };\n    let date = moment().format('YYYY-MM-DD');\n    let dueDate = moment().add('days', 30).format('YYYY-MM-DD');\n\n    return (\n      <div style={ containerStyle }>\n        <Divider />\n        <Grid columns={1}>\n          <Grid.Row stretched>\n            <Grid.Column>\n              <Segment>\n                <Form>\n                  <Header textAlign=\"center\">Guest Room</Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Out</label>\n                        <input type=\"date\" id=\"dateOut\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date Due</label>\n                        <input type=\"date\" id=\"dueDate\" defaultValue={dueDate} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Building</label>\n                    <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.address} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" defaultValue={this.props.autofill.firstName} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" defaultValue={this.props.autofill.lastName} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"three fields\">\n                      <div class=\"field\">\n                        <label>Deposit</label>\n                        <Input labelPosition=\"right\" type=\"text\" id=\"deposit\" defaultValue={this.props.autofill.deposit} >\n                          <Label basic>$</Label>\n                          <input />\n                          <Label>.00</Label>\n                        </Input>\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <label>Paid By:</label>\n                        <Checkbox\n                          radio\n                          label=\"Cash\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cash\"\n                          checked={this.state.value === \"cash\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CASH\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <br />\n                        <Checkbox\n                          radio\n                          label=\"Cheque\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cheque\"\n                          checked={this.state.value === \"cheque\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CHEQUE\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Divider />\n                  <Header textAlign=\"center\">\n                    Please return to:\n                    <br />\n                    PROLINE MANAGEMENT LTD.\n                    <br />\n                    201 - 20 Burnside Road West, Victoria BC V9A 1B3\n                    <Divider horizontal>\n                      <i class=\"cut icon\" />\n                    </Divider>\n                  </Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Building</label>\n                        <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.address} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Unit</label>\n                        <input type=\"text\" id=\"unit\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" defaultValue={this.props.autofill.firstName} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" defaultValue={this.props.autofill.lastName} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Signature</label>\n                    <input style={{ minHeight: \"5em\" }} disabled />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Phone Number</label>\n                    <input type=\"text\" id=\"phone\" defaultValue={this.props.autofill.phone_num} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"three fields\">\n                      <div class=\"field\">\n                        <label>Deposit</label>\n                        <Input labelPosition=\"right\" type=\"text\" id=\"deposit\" defaultValue={this.props.autofill.deposit} >\n                          <Label basic>$</Label>\n                          <input />\n                          <Label>.00</Label>\n                        </Input>\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <label>Paid By:</label>\n                        <Checkbox\n                          radio\n                          label=\"Cash\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cash\"\n                          checked={this.state.value === \"cash\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CASH\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <br />\n                        <br />\n                        <Checkbox\n                          radio\n                          label=\"Cheque\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"cheque\"\n                          checked={this.state.value === \"cheque\"}\n                          defaultChecked={\n                            this.props.autofill.depositType === \"CHEQUE\"\n                              ? true\n                              : false\n                          }\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Out</label>\n                        <input type=\"date\" id=\"outDate\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Due Date</label>\n                        <input type=\"date\" id=\"dueDate\" defaultValue={dueDate} />\n                      </div>\n                    </div>\n                  </Form.Field>\n                </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst PrintGuestSlip = () => {\n  const slipRef = React.useRef();\n  const [redirect, setRedirect] = useState(null);\n  return (\n    <div>\n      <ReactToPrint\n        trigger={() => <Button color=\"purple\">Print Slip</Button>}\n        content={() => slipRef.current}\n        onAfterPrint={() => {setRedirect(<Redirect to=\"/keyreports\" />)}}\n      />\n      <GuestSlip ref={slipRef} />\n    </div>\n  );\n};\n\nexport default PrintGuestSlip;\n","import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Grid,\n  Segment,\n  Radio,\n  Checkbox,\n  Label,\n  Input,\n  Button,\n  Form,\n  Divider,\n  Header\n} from \"semantic-ui-react\";\nimport ReactToPrint from \"react-to-print\";\n\nclass FobSlip extends React.Component {\n  state = {};\n  handleChange = (e, { value }) => this.setState({ value });\n\n  render() {\n    const containerStyle = {\n      display: \"auto\",\n      justifyContent: \"center\",\n      transform: \"scale(.80)\",\n    };\n    let date = moment().format('YYYY-MM-DD');\n    let dueDate = moment().add('days', 30).format('YYYY-MM-DD');\n\n    return (\n      <div style={ containerStyle }>\n        <Grid columns={1}>\n          <Grid.Row stretched>\n            <Grid.Column />\n            <Grid.Column>\n              <Segment>\n                <Form>\n                  <Header textAlign=\"center\">Purchase Form</Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <label>Building</label>\n                    <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.propertyName} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Building Address</label>\n                        <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.address} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Unit</label>\n                        <input type=\"text\" id=\"unit\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Purchase Description</label>\n                    <input style={{ minHeight: \"5em\" }} id=\"notes\" />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <Header textAlign=\"center\">Party Picking Up</Header>\n                    <div class=\"three fields\">\n                      <div class=\"field\">\n                        <label>Company</label>\n                        <input type=\"text\" id=\"company\" defaultValue={this.props.autofill.company} />\n                      </div>\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" defaultValue={this.props.autofill.firstName} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" defaultValue={this.props.autofill.lastName} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Amount</label>\n                    <Input labelPosition=\"right\" type=\"text\" id=\"deposit\" defaultValue={this.props.autofill.deposit} >\n                      <Label basic>$</Label>\n                      <input />\n                      <Label>.00</Label>\n                    </Input>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Date Out:</label>\n                    <input type=\"date\" id=\"outDate\" defaultValue={date} />\n                  </Form.Field>\n                </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst PrintPurchaseSlip = () => {\n  const slipRef = React.useRef();\n  const [redirect, setRedirect] = useState(null);\n  return (\n    <div>\n      {redirect}\n      <ReactToPrint\n        trigger={() => <Button color=\"purple\">Print Slip</Button>}\n        content={() => slipRef.current}\n        onAfterPrint={() => {setRedirect(<Redirect to=\"/keyreports\" />)}}\n      />\n      <FobSlip ref={slipRef} />\n    </div>\n  );\n};\n\nexport default PrintPurchaseSlip;\n","import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Grid,\n  Segment,\n  Radio,\n  Checkbox,\n  Label,\n  Input,\n  Button,\n  Form,\n  Divider,\n  Header\n} from \"semantic-ui-react\";\nimport ReactToPrint from \"react-to-print\";\n\nclass ElevatorSlip extends React.Component {\n  state = {};\n  handleChange = (e, { value }) => this.setState({ value });\n\n  render() {\n    const containerStyle = {\n      display: \"auto\",\n      justifyContent: \"center\",\n      transform: \"scale(.80)\",\n    };\n    let date = moment().format('YYYY-MM-DD');\n    let dueDate = moment().add('days', 30).format('YYYY-MM-DD');\n\n    return (\n      <div style={ containerStyle }>\n        <Grid columns={1}>\n          <Grid.Row stretched>\n            <Grid.Column />\n            <Grid.Column>\n              <Segment>\n                <Form>\n                  <Header textAlign=\"center\">\n                    Final Rental Documents &/ Key Signout\n                  </Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Building Address</label>\n                        <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.address} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Unit</label>\n                        <input type=\"text\" id=\"unit\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>\n                      I acknowledge that I have received the following for the\n                      above mentioned property:\n                    </label>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <Checkbox checkbox label=\"Original tenacny documents\" />\n                      </div>\n                      <div class=\"field\">\n                        <Checkbox checkbox label=\"Keys &/ fobs\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Signature</label>\n                        <input style={{ minHeight: \"5em\" }} disabled />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date</label>\n                        <input type=\"date\" id=\"dateSigned\" defaultValue={date} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Divider />\n                  <Header textAlign=\"center\">\n                    PROLINE MANAGEMENT LTD.\n                    <br />\n                    201 - 20 Burnside Road West, Victoria BC V9A 1B3 | T:\n                    250.475.6440 | F: 250.475.6442\n                    <br />\n                    Westshore: 250.915.8888 | Nanaimo: 250.754.6440 |\n                    www.prolinemanagement.com\n                    <Divider horizontal>\n                      <i class=\"cut icon\" />\n                    </Divider>\n                  </Header>\n                  <Divider />\n\n                  <Header textAlign=\"center\">\n                    Final Rental Documents &/ Key Signout\n                  </Header>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Left At Reception By</label>\n                        <input type=\"text\" id=\"opStaff\" />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date</label>\n                        <input type=\"date\" id=\"dateSigned\" defaultValue={date} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Building Address</label>\n                        <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.address} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Unit</label>\n                        <input type=\"text\" id=\"unit\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <Header textAlign=\"center\">Party Picking Up</Header>\n                    <div class=\"three fields\">\n                      <div class=\"field\">\n                        <label>Company</label>\n                        <input type=\"text\" id=\"company\" defaultValue={this.props.autofill.company} />\n                      </div>\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" defaultValue={this.props.autofill.firstName} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" defaultValue={this.props.autofill.lastName} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>\n                      I acknowledge that I have received the following for the\n                      above mentioned property:\n                    </label>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <Checkbox checkbox label=\"Original tenacny documents\" />\n                      </div>\n                      <div class=\"field\">\n                        <Checkbox checkbox label=\"Keys &/ fobs\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Signature</label>\n                        <input style={{ minHeight: \"5em\" }} disabled />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date</label>\n                        <input type=\"date\" id=\"dateSigned\" defaultValue={date} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Phone Number</label>\n                    <input type=\"text\" id=\"phone\" defaultValue={this.props.autofill.phone_num} />\n                  </Form.Field>\n                </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst PrintRentalSlip = () => {\n  const slipRef = React.useRef();\n  const [redirect, setRedirect] = useState(null);\n  return (\n    <div>\n      {redirect}\n      <ReactToPrint\n        trigger={() => <Button color=\"purple\">Print Slip</Button>}\n        content={() => slipRef.current}\n        onAfterPrint={() => {setRedirect(<Redirect to=\"/keyreports\" />)}}\n      />\n      <ElevatorSlip ref={slipRef} />\n    </div>\n  );\n};\n\nexport default PrintRentalSlip;\n","import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Grid,\n  Segment,\n  Radio,\n  Checkbox,\n  Label,\n  Input,\n  Button,\n  Form,\n  Divider,\n  Header\n} from \"semantic-ui-react\";\nimport ReactToPrint from \"react-to-print\";\n\nclass TradeSlip extends React.Component {\n  state = {};\n  handleChange = (e, { value }) => this.setState({ value });\n\n  render() {\n    const containerStyle = {\n        display: \"auto\",\n        justifyContent: \"center\",\n        transform: \"scale(.80)\",\n    };\n    let date = moment().format('YYYY-MM-DD');\n    let dueDate = moment().add('days', 30).format('YYYY-MM-DD');\n\n    return (\n      <div style={ containerStyle }>\n          <Grid columns={1}>\n          <Grid.Row stretched>\n            <Grid.Column />\n            <Grid.Column>\n              <Segment>\n                <Form>\n                  <Header textAlign=\"center\">Trade</Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <label>Building</label>\n                    <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.address} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Company</label>\n                    <input type=\"text\" id=\"company\" defaultValue={this.props.autofill.company} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Booked</label>\n                        <input type=\"date\" id=\"bookedOut\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Due Date</label>\n                        <input type=\"date\" id=\"dueDate\" defaultValue={dueDate} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Divider />\n                  <Header textAlign=\"center\">\n                    Please return to:\n                    <br />\n                    PROLINE MANAGEMENT LTD.\n                    <br />\n                    201 - 20 Burnside Road West, Victoria BC V9A 1B3\n                    <Divider horizontal>\n                      <i class=\"cut icon\" />\n                    </Divider>\n                  </Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <label>Building</label>\n                    <input type=\"text\" id=\"propertyName\" defaultValue={this.props.autofill.address} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Description</label>\n                    <input type=\"number\" id=\"description\" defaultValue={this.props.autofill.comments} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" defaultValue={this.props.autofill.firstname} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" defaultValue={this.props.autofill.lastName} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Company</label>\n                    <input type=\"text\" id=\"company\" defaultValue={this.props.autofill.company} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Signature</label>\n                    <input style={{ minHeight: \"5em\" }} disabled />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Phone Number</label>\n                    <input type=\"text\" id=\"phone\" defaultValu={this.props.autofill.company} />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <Checkbox\n                          radio\n                          label=\"To Return\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"return\"\n                          checked={this.state.value === \"return\"}\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <Checkbox\n                          radio\n                          label=\"To Keep (No Charge)\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"keep\"\n                          checked={this.state.value === \"keep\"}\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Out</label>\n                        <input type=\"date\" id=\"dateOut\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date Due</label>\n                        <input type=\"date\" id=\"dueDate\" defaultValue={dueDate} />\n                      </div>\n                    </div>\n                  </Form.Field>\n                </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst PrintTradeSlip = () => {\n  const slipRef = React.useRef();\n  const [redirect, setRedirect] = useState(null);\n  return (\n    <div>\n      {redirect}\n      <ReactToPrint\n        trigger={() => <Button color=\"purple\">Print Slip</Button>}\n        content={() => slipRef.current}\n        onAfterPrint={() => {setRedirect(<Redirect to=\"/keyreports\" />)}}\n      />\n      <TradeSlip ref={slipRef} />\n    </div>\n  );\n};\n\nexport default PrintTradeSlip;\n","//This class handles the entire checkout process, passing callback functions to stateful and stateless components,\n//setting flags based on the client's business rules, and conditionally rendering the results, as well as\n//transaction slips for the client to keep a physical trail of the transaction as well.\n\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Label, Header, Divider } from \"semantic-ui-react\";\nimport KeyPending from \"./KeyPending\";\nimport CheckKeyOut from \"./CheckKeyOut\";\nimport CheckKeyIn from \"./CheckKeyIn\";\nimport { fetchKeyStatus, fetchKeyCheck } from \"../../app/fetch/fetches\";\nimport PrintCohoSlip from \"../slips/CohoSlip\";\nimport PrintElevatorSlip from \"../slips/ElevatorSlip\";\nimport PrintFobSlip from \"../slips/FobSlip\";\nimport PrintGuestSlip from \"../slips/GuestSlip\";\nimport PrintPurchaseSlip from \"../slips/PurchaseSlip\";\nimport PrintRentalSlip from \"../slips/RentalSlip\";\nimport PrintTradeSlip from \"../slips/TradeSlip\";\n\nclass ScanKey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disableForm: false,\n      renderTransactionSlip: false,\n      renderDepositSlip: false,\n      renderNewContractor: false,\n      scannedKey: \"\",\n      keyPending: false,\n      keyCheckedIn: false,\n      keyRecord: {},\n      keyTransaction: {},\n      autofill: {},\n      searchResults: []\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.handleKeyScan = this.handleKeyScan.bind(this);\n    this.handlePending = this.handlePending.bind(this);\n    this.handleCheckout = this.handleCheckout.bind(this);\n    this.handleCheckin = this.handleCheckin.bind(this);\n  }\n\n  //Moves the scanned key QR Code to state\n  handleInput(e) {\n    if (e.target.value) {\n      this.setState({\n        scannedKey: e.target.value\n      });\n    }\n  }\n\n  //Sends POST request to retrieve a key record and [if applicable] a transaction record from the db. Mutates state and UI\n  //according to the key's status\n  async handleKeyScan(e) {\n    e.preventDefault();\n    const request = {\n      id: this.state.scannedKey\n    };\n    await fetchKeyStatus(request, \"POST\", res => {\n      if (res.key.keyStatus === \"PENDING\") {\n        this.setState(state => {\n          return {\n            keyPending: true,\n            keyCheckedIn: true,\n            keyRecord: res.key,\n            disableForm: true\n          };\n        });\n      } else if (res.key.keyStatus === \"IN\") {\n        this.setState(state => {\n          return {\n            keyPending: false,\n            keyCheckedIn: true,\n            keyRecord: res.key,\n            disableForm: true\n          };\n        });\n      } else if (res.key.keyStatus === \"OUT\" && res.trans) {\n        this.setState(state => {\n          return {\n            keyPending: false,\n            keyCheckedIn: false,\n            keyRecord: res.key,\n            keyTransaction: res.trans,\n            disableForm: true\n          };\n        });\n      }\n    });\n  }\n\n  //Moves a key record's status into pending, updates the db\n  async handlePending(e) {\n    e.preventDefault();\n    let request = {\n      keyStatus: \"PENDING\",\n      keyId: this.state.keyRecord.keyId\n    };\n    await fetchKeyStatus(request, \"PUT\", res => {\n      this.setState({\n        disableForm: false,\n        keyPending: true\n      });\n    });\n  }\n\n  async handleCheckout(e) {\n    e.preventDefault();\n    //Extract the form data from the CheckOut submit and assign NULLs for the database record where needed\n    let target = e.target;\n    let firstName, lastName, company, deposit, depositType, fees, notes, sale, exit;\n    target.first_name.value === \"\"\n      ? (firstName = null)\n      : (firstName = target.first_name.value);\n    target.last_name.value === \"\"\n      ? (lastName = null)\n      : (lastName = target.last_name.value);\n    target.company.value === \"\"\n      ? (company = null)\n      : (company = target.company.value);\n    target.deposit.value === \"\"\n      ? (deposit = null)\n      : (deposit = target.deposit.value);\n    target.depositType.value === \"\"\n      ? (depositType = null)\n      : (depositType = target.depositType.value);\n    target.fees.value === \"\" ? (fees = null) : (fees = target.fees.value);\n    target.notes.value === \"\" ? (notes = null) : (notes = e.target.notes.value);\n    target.sale.checked ? (sale = true) : (sale = false);\n    target.exit.checked ? (exit = true) : (exit = false);\n\n    const transRequest = {\n      firstName: firstName,\n      lastName: lastName,\n      company: company,\n      deposit: deposit,\n      depositType: depositType,\n      fees: fees,\n      notes: notes,\n      sale: sale,\n      exit: exit,\n      keyId: this.state.keyRecord.keyId\n    };\n\n    //Fetch to create a transaction record and change key status to '0'/'Checked Out'\n    await fetchKeyCheck(transRequest, \"POST\", res => {\n      const autofill = Object.assign(transRequest, this.state.keyRecord, res.contractor);\n      this.setState({\n        autofill : autofill\n      });\n      if (res.redirect) {\n        this.setState({ renderNewContractor: true });\n      } else if (this.state.keyRecord.deposit > 0) {\n        this.setState({\n          disableForm: true,\n          keyCheckedIn: false,\n          keyPending: false,\n          renderTransactionSlip: true,\n          renderDepositSlip: true,\n        });\n      } else if (sale) {\n        this.setState({\n          disableForm: true,\n          keyCheckedIn: false,\n          keyPending: false,\n          renderTransactionSlip: true,\n          keySold: true,\n        });\n      } else if (exit) {\n        this.setState({\n          disableForm: true,\n          keyCheckedIn: false,\n          keyPending: false,\n          renderTransactionSlip: true,\n          rentalExit: true,\n        });\n      } else {\n        this.setState({\n          disableForm: true,\n          keyCheckedIn: false,\n          keyPending: false,\n          renderTransactionSlip: true,\n        });\n      }\n    });\n  }\n\n  async handleCheckin(e) {\n    e.preventDefault();\n    let request = {\n      keyId: this.state.keyRecord.keyId,\n      transId: this.state.keyTransaction.id\n    };\n    await fetchKeyCheck(request, \"PUT\", res => {\n      this.setState({\n        disableForm: false\n      });\n    });\n  }\n\n  render() {\n    const containerStyle = {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: \"10%\"\n    };\n\n    let newContractor;\n    this.state.renderNewContractor\n      ? (newContractor = <Redirect to=\"/createcontractor\" />)\n      : (newContractor = null);\n\n    if (!this.state.disableForm && !this.state.renderTransactionSlip) {\n      return (\n        <div style={containerStyle}>\n          <Form onSubmit={this.handleKeyScan}>\n            <Header>Check Key Status</Header>\n            <Divider />\n            <Form.Field>\n              <Label pointing=\"below\">Scan QR Code</Label>\n              <Form.Input\n                id=\"keyID\"\n                as=\"input\"\n                autoFocus\n                type=\"text\"\n                onChange={this.handleInput}\n              />\n            </Form.Field>\n            <Divider />\n            <Form.Button color=\"purple\" content=\"Submit\" />\n          </Form>\n        </div>\n      );\n    } else if (!this.state.keyPending && this.state.keyCheckedIn) {\n      return (\n        <div style={{ containerStyle }}>\n          <KeyPending\n            keyRecord={this.state.keyRecord}\n            isPending={this.handlePending}\n          />\n        </div>\n      );\n    } else if (this.state.keyPending && this.state.keyCheckedIn) {\n      return (\n        <div style={{ containerStyle }}>\n          {newContractor}\n          <CheckKeyOut\n            keyRecord={this.state.keyRecord}\n            checkout={this.handleCheckout}\n          />\n        </div>\n      );\n    } else if (\n      this.state.renderTransactionSlip &&\n      !this.state.keyPending &&\n      !this.state.keyCheckedIn &&\n      this.state.keySold\n    ) {\n      return (\n        <div style={{ containerStyle }}>\n          <PrintPurchaseSlip autofill={this.state.autofill} />\n        </div>\n      );\n    } else if (\n      this.state.renderTransactionSlip &&\n      !this.state.keyPending &&\n      !this.state.keyCheckedIn &&\n      this.state.rentalExit\n    ) {\n      return (\n        <div style={{ containerStyle }}>\n          <PrintRentalSlip autofill={this.state.autofill} />\n        </div>\n      );\n    }  else if (\n      this.state.renderTransactionSlip &&\n      !this.state.keyPending &&\n      !this.state.keyCheckedIn\n    ) {\n      switch (this.state.keyRecord.keyType) {\n        case \"MASTER\":\n          return (\n            <div style={{ containerStyle }}>\n              <PrintFobSlip autofill={this.state.autofill} />\n            </div>\n          );\n        case \"TRADES\":\n          return (\n            <div style={{ containerStyle }}>\n              <PrintTradeSlip autofill={this.state.autofill} />\n            </div>\n          );\n        case \"FOB\":\n          return (\n            <div style={{ containerStyle }}>\n              <PrintFobSlip autofill={this.state.autofill} />\n            </div>\n          );\n        case \"GARAGE\":\n          return (\n            <div style={{ containerStyle }}>\n              <PrintElevatorSlip autofill={this.state.autofill} />\n            </div>\n          );\n        case \"ELEVATOR\":\n          return (\n            <div style={{ containerStyle }}>\n              <PrintElevatorSlip autofill={this.state.autofill} />\n            </div>\n          );\n        case \"PROLINE\":\n          return (\n            <div style={{ containerStyle }}>\n              <PrintFobSlip autofill={this.state.autofill} />\n            </div>\n          );\n        case \"GUEST-ROOM\":\n          let guest;\n          this.state.keyRecord.propertyName === \"COHO (Phase 1 & 2)\"\n            ? (guest = <PrintCohoSlip autofill={this.state.autofill} />)\n            : (guest = <PrintGuestSlip autofill={this.state.autofill} />);\n          return <div style={{ containerStyle }}>{guest}</div>;\n        default:\n          return null;\n      }\n    } else if (\n      !this.state.renderTransactionSlip &&\n      !this.state.keyPending &&\n      !this.state.keyCheckedIn\n    ) {\n      return (\n        <div style={{ containerStyle }}>\n          <CheckKeyIn\n            keyRecord={this.state.keyRecord}\n            transaction={this.state.keyTransaction}\n            checkin={this.handleCheckin}\n          />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default ScanKey;\n","import React from \"react\";\nimport { Button, Form, Dropdown, Input, Header } from \"semantic-ui-react\";\nimport PrintQRCode from \"./PrintQRCode\";\nimport { fetchRecord } from \"../../app/fetch/fetches\";\nimport AutoComplete from \"./AutoComplete\";\nimport * as ui from \"./ui\";\n\nclass EditKey extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: this.props.location.keyRecord.address,\n      city: this.props.location.keyRecord.city,\n      keyId: this.props.location.keyRecord.key_id,\n      keyStorageLocation: this.props.location.keyRecord.storage_location,\n      keyOfficeLocation: this.props.location.keyRecord.office_location,\n      keyQuantity: this.props.location.keyRecord.key_quantity,\n      keyNumber: this.props.location.keyRecord.key_number,\n      keyStatus: this.props.location.keyRecord.key_status,\n      keyType: this.props.location.keyRecord.key_type,\n      active: this.props.location.keyRecord.active,\n      deposit: this.props.location.keyRecord.deposit,\n      showQR: false,\n      propertyNumber: \"\",\n      keyNumber: 0,\n      selected: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelected = this.handleSelected.bind(this);\n  }\n\n  handleChange(e, data) {\n    this.setState({\n      [data.name]: data.value\n    });\n  }\n\n  handleSelected() {\n    this.setState({selected: true});\n  }\n\n  async handleSubmit(e, data) {\n    e.preventDefault();\n    console.log(data);\n    const {\n      city,\n      keyId,\n      keyStatus,\n      keyStorageLocation,\n      keyOfficeLocation,\n      keyQuantity,\n      keyType,\n      address,\n      deposit\n    } = this.state;\n    const request = {\n      address: address,\n      city: city,\n      keyId: keyId,\n      keyStatus: keyStatus,\n      keyStorageLocation: keyStorageLocation,\n      keyOfficeLocation: keyOfficeLocation,\n      keyQuantity: keyQuantity,\n      keyType: keyType,\n      deposit: deposit\n    };\n    await fetchRecord(request, \"PUT\", \"/keyrecord\", res => {\n      this.setState({\n        showQR: true,\n        propertyNumber: res.property_number,\n        keyNumber: res.key_number\n      });\n    });\n  }\n\n  render() {\n    const containerStyle = {\n      display: \"inline-block\",\n      paddingTop: 20,\n      textAlign: \"left\",\n      width: \"50%\"\n    };\n\n    if (!this.state.showQR) {\n      return (\n        <div\n          style={{\n            marginTop: 10,\n            padding: 20,\n            display: \"block\",\n            textAlign: \"center\"\n          }}\n        >\n          <div style={containerStyle}>\n            <Form onSubmit={this.handleSubmit}>\n              <Header className=\"ui horizontal divider header\">\n                Edit Key\n              </Header>\n              <Form.Field>\n                <label>Street Address</label>\n                <AutoComplete\n                  table=\"address_tab\"\n                  id=\"address\"\n                  as={Input}\n                  onChange={this.handleChange}\n                  placeholder=\"Address\"\n                  type=\"text\"\n                  value={this.state.address}\n                  name=\"address\"\n                  selected={this.handleSelected}\n                />\n              </Form.Field>\n              <Form.Field>\n              <label>City</label>\n              <Input\n                onChange={this.handleChange}\n                value={this.state.city}\n                placeholder=\"City\"\n                name=\"city\"\n                required\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Storage Location</label>\n              <Input\n                onChange={this.handleChange}\n                value={this.state.keyStorageLocation}\n                placeholder=\"Storage Location\"\n                name=\"keyStorageLocation\"\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Office Location</label>\n              <Dropdown\n                options={ui.keyOfficeLocationOptions}\n                onChange={this.handleChange}\n                value={this.state.keyOfficeLocation}\n                selection\n                name=\"keyOfficeLocation\"\n                placeholder=\"Office location...\"\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Key Status</label>\n              <Dropdown\n                options={ui.keyStatusOptions}\n                onChange={this.handleChange}\n                value={this.state.keyStatus}\n                selection\n                name=\"keyStatus\"\n                placeholder=\"Status of key\"\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Key Quantity</label>\n              <Input\n                onChange={this.handleChange}\n                value={this.state.keyQuantity}\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"Key Quantity\"\n                name=\"keyQuantity\"\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Key Type</label>\n              <Dropdown\n                options={ui.keyTypeOptions}\n                onChange={this.handleChange}\n                value={this.state.keyType}\n                selection\n                name=\"keyType\"\n                placeholder=\"Key Type\"\n              />\n              </Form.Field>\n              <Form.Field>\n              <label>Deposit</label>\n              <Input\n                onChange={this.handleChange}\n                value={this.state.deposit}\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"Is there a deposit on the key?\"\n                name=\"deposit\"\n              />\n              </Form.Field>\n              <br />\n              <Button type=\"submit\" color=\"purple\">\n                Submit\n              </Button>\n            </Form>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <PrintQRCode\n          propertyNumber={this.state.propertyNumber}\n          keyOfficeLocation={this.state.keyOfficeLocation}\n          keyType={this.state.keyType}\n          keyNumber={this.state.keyNumber}\n          keyQuantity={this.state.keyQuantity}\n        />\n      );\n    }\n  }\n}\n\nexport default EditKey;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  TextArea,\n  Button,\n  Divider,\n  Form,\n  Dropdown,\n  Input,\n  Header\n} from \"semantic-ui-react\";\nimport { fetchRecord } from \"../../app/fetch/fetches\";\n\nexport default class EditProperty extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: this.props.location.keyRecord.address,\n      city: this.props.location.keyRecord.city,\n      postalCode: this.props.location.keyRecord.postal_code,\n      propertyName: this.props.location.keyRecord.property_name,\n      propertyNumber: this.props.location.keyRecord.property_number,\n      propertyType: this.props.location.keyRecord.property_type,\n      comments: this.props.location.keyRecord.comments,\n      redirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e, data) {\n    this.setState({\n      [data.name]: data.value\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const {\n      address,\n      city,\n      postalCode,\n      propertyName,\n      propertyNumber,\n      propertyType,\n      comments\n    } = this.state;\n    const request = {\n      propertyId: this.props.location.keyRecord.property_id,\n      addressId: this.props.location.keyRecord.address_id,\n      address: address,\n      city: city,\n      postalCode: postalCode,\n      propertyName: propertyName,\n      propertyNumber: propertyNumber,\n      propertyType: propertyType,\n      comments: comments\n    };\n    await fetchRecord(request, \"PUT\", \"/propertyrecord\", res => {\n      this.setState({redirect: true});\n    });\n  }\n\n  render() {\n    let redirect;\n    this.state.redirect ? redirect = (<Redirect to=\"/properties\" />) : redirect = null\n    const propTypeOptions = [\n      {\n        key: \"1\",\n        text: \"Strata\",\n        value: \"STRATA\"\n      },\n      {\n        key: \"2\",\n        text: \"Rental\",\n        value: \"RENTAL\"\n      },\n      {\n        key: \"3\",\n        text: \"Sundry\",\n        value: \"SUNDRY\"\n      },\n      {\n        key: \"4\",\n        text: \"Office\",\n        value: \"OFFICE\"\n      }\n    ];\n    const containerStyle = {\n      display: \"inline-block\",\n      paddingTop: 20,\n      textAlign: \"left\",\n      width: \"50%\"\n    };\n\n    return (\n      <div\n        style={{\n          marginTop: 10,\n          padding: 20,\n          display: \"block\",\n          textAlign: \"center\"\n        }}\n      >\n      {redirect}\n        <div style={containerStyle}>\n          <Form onSubmit={this.handleSubmit}>\n            <Header className=\"ui horizontal divider header\">\n              Edit Property\n            </Header>\n            <Form.Field>\n              <label>Name</label>\n              <Input\n                placeholder=\"Property Name\"\n                onChange={this.handleChange}\n                name=\"propertyName\"\n                value={this.state.propertyName}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Building Number</label>\n              <Input\n                placeholder=\"####\"\n                onChange={this.handleChange}\n                name=\"propertyNumber\"\n                value={this.state.propertyNumber}\n                required\n                pattern='^[A-Za-z0-9]{4}'\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Address</label>\n              <Input\n                placeholder=\"Address\"\n                onChange={this.handleChange}\n                name=\"address\"\n                value={this.state.address}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>City</label>\n              <Input\n                placeholder=\"City\"\n                onChange={this.handleChange}\n                name=\"city\"\n                value={this.state.city}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Postal Code</label>\n              <Input\n                placeholder=\"V1V1V1\"\n                onChange={this.handleChange}\n                name=\"postalCode\"\n                value={this.state.postalCode}\n                required\n                pattern='[A-Za-z]\\d[A-Za-z]\\d[A-Za-z]\\d$'\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Property Type</label>\n              <Dropdown\n                name=\"propertyType\"\n                selection\n                placeholder=\"Property Type\"\n                onChange={this.handleChange}\n                value={this.state.propertyType}\n                options={propTypeOptions}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Comments</label>\n              <TextArea\n                style={{ minHeight: 100, width: \"50%\" }}\n                name=\"comments\"\n                fluid\n                placeholder=\"Additional Comments...\"\n                onChange={this.handleChange}\n                value={this.state.comments}\n              />\n            </Form.Field>\n            <Divider />\n            <Button type=\"submit\" color=\"purple\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Grid,\n  Segment,\n  Radio,\n  Checkbox,\n  Label,\n  Input,\n  Button,\n  Form,\n  Divider,\n  Header\n} from \"semantic-ui-react\";\nimport ReactToPrint from \"react-to-print\";\n\nclass GenericSlip extends React.Component {\n  state = {};\n  handleChange = (e, { value }) => this.setState({ value });\n\n  render() {\n    const containerStyle = {\n      display: \"auto\",\n      justifyContent: \"center\",\n      transform: \"scale(.80)\",\n    };\n    let date = moment().format('YYYY-MM-DD');\n    let dueDate = moment().add('days', 30).format('YYYY-MM-DD');\n\n    return (\n      <div style={ containerStyle }>\n        <Grid columns={1}>\n          <Grid.Row stretched>\n            <Grid.Column />\n            <Grid.Column>\n              <Segment>\n                <Form>\n                  <Header textAlign=\"center\">Generic Form</Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <label>Building</label>\n                    <input type=\"text\" id=\"propertyName\" />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Company</label>\n                    <input type=\"text\" id=\"company\" />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Booked</label>\n                        <input type=\"date\" id=\"bookedOut\" />\n                      </div>\n                      <div class=\"field\">\n                        <label>Due Date</label>\n                        <input type=\"date\" id=\"dueDate\" defaultValue={dueDate} />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Divider />\n                  <Header textAlign=\"center\">\n                    Please return to:\n                    <br />\n                    PROLINE MANAGEMENT LTD.\n                    <br />\n                    201 - 20 Burnside Road West, Victoria BC V9A 1B3\n                    <Divider horizontal>\n                      <i class=\"cut icon\" />\n                    </Divider>\n                  </Header>\n                  <Divider />\n\n                  <Form.Field>\n                    <label>Building</label>\n                    <input type=\"text\" id=\"propertyName\" />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Set</label>\n                    <input id=\"setNumber\" />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Description</label>\n                    <input type=\"number\" id=\"description\" />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>First Name</label>\n                        <input type=\"text\" id=\"firstName\" />\n                      </div>\n                      <div class=\"field\">\n                        <label>Last Name</label>\n                        <input type=\"text\" id=\"lastName\" />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Company</label>\n                    <input type=\"text\" id=\"company\" />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Signature</label>\n                    <input style={{ minHeight: \"5em\" }} disabled />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <label>Phone Number</label>\n                    <input type=\"text\" id=\"phone\" />\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <Checkbox\n                          radio\n                          label=\"To Return\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"return\"\n                          checked={this.state.value === \"return\"}\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                      <div class=\"field\">\n                        <Checkbox\n                          radio\n                          label=\"To Keep (No Charge)\"\n                          name=\"checkboxRadioGroup\"\n                          value=\"keep\"\n                          checked={this.state.value === \"keep\"}\n                          onChange={this.handleChange}\n                        />\n                      </div>\n                    </div>\n                  </Form.Field>\n\n                  <Form.Field>\n                    <div class=\"two fields\">\n                      <div class=\"field\">\n                        <label>Date Out</label>\n                        <input type=\"date\" id=\"dateOut\" defaultValue={date} />\n                      </div>\n                      <div class=\"field\">\n                        <label>Date Due</label>\n                        <input type=\"date\" id=\"dueDate\" defaultValue={dueDate} />\n                      </div>\n                    </div>\n                  </Form.Field>\n                </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst PrintGenericSlip = () => {\n  const slipRef = React.useRef();\n  const [redirect, setRedirect] = useState(null);\n  return (\n    <div>\n      {redirect}\n      <ReactToPrint\n        trigger={() => <Button color=\"purple\">Print Slip</Button>}\n        content={() => slipRef.current}\n        onAfterPrint={() => {setRedirect(<Redirect to=\"/keyreports\" />)}}\n      />\n      <GenericSlip ref={slipRef} />\n    </div>\n  );\n};\n\nexport default PrintGenericSlip;","//Top-level component for handling the routing and component rendering for the entire app\n\nimport React, { Component } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport RecordDashboard from \"../../features/record/RecordDashboard\";\nimport ReportDashboard from \"../../features/report/ReportDashboard\";\nimport NavBar from \"../../features/nav/NavBar/NavBar\";\nimport HomePage from \"../../features/home/HomePage\";\nimport AddProperty from \"../../features/property/AddProperty\";\nimport EditContractor from \"../../features/user/EditContractor\";\nimport AddContractor from \"../../features/user/AddContractor\";\nimport AddKey from \"../../features/key/AddKey\";\nimport Testing from \"../../features/testing/Testing\";\nimport ScanKey from \"../../features/key/ScanKey\";\nimport EditKey from \"../../features/key/EditKey\";\nimport EditProperty from \"../../features/property/EditProperty\";\nimport PrintCohoSlip from \"../../features/slips/CohoSlip\";\nimport PrintElevatorSlip from \"../../features/slips/ElevatorSlip\";\nimport PrintFobSlip from \"../../features/slips/FobSlip\";\nimport PrintGuestSlip from \"../../features/slips/GuestSlip\";\nimport PrintPurchaseSlip from \"../../features/slips/PurchaseSlip\";\nimport PrintRentalSlip from \"../../features/slips/RentalSlip\";\nimport PrintTradeSlip from \"../../features/slips/TradeSlip\";\nimport PrintGenericSlip from \"../../features/slips/GenericSlip\";\n\nimport { fetchLogin } from \"../fetch/fetches\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authorized: false,\n      privLevel: 0,\n      redirect: false\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.hydrateStateWithStorage = this.hydrateStateWithStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.hydrateStateWithStorage();\n  }\n\n  //If we have data saved to local storage, initialize our application-level state accordingly\n  hydrateStateWithStorage() {\n    for (let key in this.state) {\n      if (localStorage.hasOwnProperty(key)) {\n        let value = localStorage.getItem(key);\n        try {\n          value = JSON.parse(value);\n          this.setState({\n            [key]: value\n          });\n        } catch (err) {\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  }\n\n//Functions to render our sub-navbar components, passing various props\n  KeyRecordDashBoard = props => {\n    return (\n      <RecordDashboard\n        tableType=\"keys\"\n        privLevel={this.state.privLevel}\n        {...props}\n      />\n    );\n  };\n\n  PropertyRecordDashBoard = props => {\n    return (\n      <RecordDashboard\n        tableType=\"properties\"\n        privLevel={this.state.privLevel}\n        {...props}\n      />\n    );\n  };\n\n  PeopleRecordDashboard = props => {\n    return (\n      <RecordDashboard\n        tableType=\"people\"\n        privLevel={this.state.privLevel}\n        {...props}\n      />\n    );\n  };\n\n  KeyReportDashboard = props => {\n    return <ReportDashboard tableType=\"keys\" {...props} />;\n  };\n\n  BuildingReportDashboard = props => {\n    return <ReportDashboard tableType=\"properties\" {...props} />;\n  };\n\n//Function to wrap the entire post-homepage application as an authenticated route\n  PrivateRoute({ render: Component, authorized, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          authorized === true ? <Component {...props} /> : <Redirect to=\"/\" />\n        }\n      />\n    );\n  }\n\n  handleLogin(e) {\n    const request = {\n      username: e.target.username.value,\n      password: e.target.password.value\n    };\n    fetchLogin(request, res => {\n      console.log(res);\n      localStorage.setItem(\"authorized\", \"true\");\n      localStorage.setItem(\"privLevel\", JSON.stringify(res.priv_level));\n      localStorage.setItem(\"firstName\", JSON.stringify(res.first_name));\n      localStorage.setItem(\"lastName\", JSON.stringify(res.last_name));\n      localStorage.setItem(\"redirect\", \"true\");\n      this.setState({\n        authorized: true,\n        privLevel: res.priv_level,\n        redirect: true\n      });\n    });\n  }\n\nhandleLogout(e) {\n  e.preventDefault();\n  localStorage.clear();\n  window.location.href = \"/\"\n  this.setState({\n    authorized: false,\n    privLevel: 0,\n    redirect: false\n  });\n}\n\n\nHomePageLogin = (props) => {\n  if (this.state.redirect) {\n    return <Redirect to=\"keys\" />\n   }\n  return <HomePage login={this.handleLogin} {...props} />\n}\n\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={this.HomePageLogin} />\n        </Switch>\n        <this.PrivateRoute\n          authorized={this.state.authorized}\n          path=\"/(.+)\"\n          render={() => (\n            <div>\n              <NavBar handleLogout={this.handleLogout} />\n              <Container className=\"main\">\n                <Switch>\n                  <Route path=\"/keys\" render={this.KeyRecordDashBoard} />\n                  <Route\n                    path=\"/properties\"\n                    render={this.PropertyRecordDashBoard}\n                  />\n                  <Route path=\"/people\" render={this.PeopleRecordDashboard} />\n                  <Route path=\"/createcontractor\" component={AddContractor} />\n                  <Route path=\"/editcontractor\" component={EditContractor} />\n                  <Route path=\"/keyreports\" render={this.KeyReportDashboard} />\n                  <Route\n                    path=\"/buildingreports\"\n                    render={this.BuildingReportDashboard}\n                  />\n                  <Route path=\"/createkey\" component={AddKey} />\n                  <Route path=\"/createproperty\" component={AddProperty} />\n                  <Route path=\"/scankey\" component={ScanKey} />\n                  <Route path=\"/editkey\" component={EditKey} />\n                  <Route path=\"/editproperty\" component={EditProperty} />\n                  <Route path=\"/testing\" component={Testing} />\n                  <Route path=\"/coho\" component={PrintCohoSlip} />\n                  <Route path=\"/elevator\" component={PrintElevatorSlip} />\n                  <Route path=\"/fob\" component={PrintFobSlip} />\n                  <Route path=\"/guest\" component={PrintGuestSlip} />\n                  <Route path=\"/purchase\" component={PrintPurchaseSlip} />\n                  <Route path=\"/rental\" component={PrintRentalSlip} />\n                  <Route path=\"/trade\" component={PrintTradeSlip} />\n                  <Route path=\"/generic\" component={PrintGenericSlip} />\n                </Switch>\n              </Container>\n            </div>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './app/layout/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst rootEl = document.getElementById('root');\n\nlet render = () => {\n  ReactDOM.render(\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n,\n    rootEl\n  );\n};\n\nif (module.hot) {\n  module.hot.accept('./app/layout/App', () => {\n    setTimeout(render);\n  });\n}\n\nrender();\n\nregisterServiceWorker();\n"],"sourceRoot":""}